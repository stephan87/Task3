<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="TestSerialAppC" loc="3:TestSerialAppC.nc">
      <configuration/>
    </component>
    <component qname="TestSerialC" loc="4:TestSerialC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/sensornet6/local/src/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformP" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/MainC.nc">
      <documentation loc="1:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <module/>
    </component>
    <component qname="TestSerialAppC.BeaconTimer" loc="44(TestSerialAppC.BeaconTimer):/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1c430"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0cd6a1c788"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0cd70fb0a8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1c430"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0cd6a1c788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1c430"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0cd6a1c788"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1c430"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0cd6a1c788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestSerialAppC.AckTimer" loc="44(TestSerialAppC.AckTimer):/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.SensorTimer" loc="44(TestSerialAppC.SensorTimer):/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.TossimDemoSensor" loc="32(TestSerialAppC.TossimDemoSensor):/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/DemoSensorC.nc">
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.TossimDemoSensor.ConstantSensorC" loc="42(TestSerialAppC.TossimDemoSensor.ConstantSensorC):/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc">
      <documentation loc="35:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ConstantSensorC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
          </type-int>
          <value cst="I:48879">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0cd70fb0a8" loc="23:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0cd70fb0a8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0cd70fb398" loc="23:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0cd6c9bae0" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0cd6c9be48" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0cd6c981e0" loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0cd6c98510" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0cd6d33d98" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0cd6d30160" loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0cd6d304c8" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0cd6d307f8" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0cd72b6b78" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0cd72b6b78"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b0cd72b2020" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0cd6ca5168" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0cd6ca54b0" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0cd6ca57f8" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0cd729d300" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0cd729d300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/DemoSensorC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0cd70f2738" loc="23:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0cd70f2738"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0cd70f2a28" loc="23:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0cd72f7a20" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0cd72f7a20"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ConstantSensorC" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc" abstract="">
      <documentation loc="35:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b0cd7314020" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b0cd7314020"/></type-var>
        </typedef>
        <constant name="val" ref="0x2b0cd7314340" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b0cd69e2748" loc="113:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0cd69e24d8" loc="113:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b0cd69e0c00" loc="138:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0cd69e0990" loc="138:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0cd69e6b30" loc="104:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0cd69e0020" loc="130:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b0cd69e4580" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b0cd69b9a38" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b0cd69b8258" loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b0cd714abf8" loc="38:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b0cd71493e0" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b0cd714a4f0" loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b0cd7149b90" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b0cd714b328" loc="21:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b47b8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b0cd70b4bc0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b0cd714bcd8" loc="27:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b47b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b0cd70b4bc0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0cd714ba68" loc="27:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b47b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b0cd70b4bc0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x2b0cd6e335b8" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b0cd5b09020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e33348" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b0cd6a15290" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6a15020" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b0cd6a14290" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6a14020" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0cd6a103c0" loc="126:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6a12d98" loc="126:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0cd6a10108" loc="126:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0cd6a12508" loc="106:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b0cd6a13658" loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6a130c8" loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0cd6a133d8" loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0cd70c7c00" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0cd70c7c00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0cd70c34c8" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0cd6a019c8" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b0cd6a010c8" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b0cd6a01428" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0cd6a01738" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0cd69fa020" loc="135:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd69fc8e0" loc="135:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0cd69fcbf0" loc="135:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0cd69fc0d8" loc="123:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0cd69ffc80" loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd69ffa10" loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0cd69fd2a0" loc="110:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd69fecc8" loc="110:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0cd69fd020" loc="110:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b0cd6a42398" loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0cd6a42398"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b0cd6a42bd0" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b0cd6a41898" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0cd6a42398"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b0cd6a41318" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b0cd6a41618" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0cd6a42398"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b0cd7118020" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b8020"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b0cd70b8428"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b0cd7116360" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70ee618"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b0cd70eea20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b0cd71171d8" loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b2ed0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b0cd70b0308"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b0cd7117b90" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b2ed0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b0cd70b0308"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b0cd7117920" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b2ed0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b0cd70b0308"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b0cd7116d18" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70ee618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b0cd70eea20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0cd7116aa8" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70ee618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b0cd70eea20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b0cd71189f0" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b8020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b0cd70b8428"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0cd7118780" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b8020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b0cd70b8428"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b0cd6fd8800" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b0cd6fd7710" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b0cd6fd7020" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b0cd6fd8020" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b0cd6fdc9b8" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b0cd6fdccf0" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0cd710d3e8" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0cd710d3e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0cd710d618" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0cd7108020" loc="109:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0cd710b070" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b0cd71095c0" loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0cd7109020" loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b0cd7109340" loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0cd710b7e0" loc="88:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b0cd71087a0" loc="116:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0cd710c108" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0cd710de68" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd710d618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0cd710c8d8" loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0cd6b551d8" loc="62:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b0cd7119428" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd7119428"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b0cd710fa40" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0cd7112dc0" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0cd7119ce0" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd7119428"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0cd7111500" loc="62:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0cd71501d8" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0cd7112680" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd7119428"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0cd7112410" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd7119428"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0cd7111bf8" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0cd710f328" loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b0cd69f6390" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
              <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6a02a50" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b0cd6a02d78" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0cd69f60c8" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x2b0cd6df1020" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x2b0cd6df2c98" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x2b0cd6df0df8" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x2b0cd5af9660"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x2b0cd6df04f0" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x2b0cd6df0828" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0cd6df0b68" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x2b0cd5af9660"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x2b0cd6deeb28" loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b0cd6dee490" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x2b0cd6df25f8" loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0cd6df1e10" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x2b0cd6df1760" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0cd71057c0" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0cd71057c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0cd71059f0" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd71059f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0cd7101328" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0cd71059f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b0cd7100360" loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b0cd7101b40" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0cd7100a50" loc="82:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b0cd6b7b6d0" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b0cd6b7bd98" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b0cd6b528e8" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b0cd6b79b58" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0cd6b7b020" loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b0cd6b79480" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0cd6b56bc0" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b0cd6b52258" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b0cd6a4aa40" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b0cd6a491d8" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b0cd6a49948" loc="72:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b0cd6a48810" loc="83:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b0cd6a46e70" loc="100:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0cd6a45630" loc="117:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b0cd6a480d8" loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0cd6a44290" loc="134:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b0cd6a44020" loc="134:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b0cd6a4a328" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b0cd6a46020" loc="89:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b0cd6a46738" loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b0cd6e43b90" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e43920" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b0cd6e3ecb0" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e3ea40" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b0cd6e3d020" loc="85:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e3fc38" loc="85:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x2b0cd6ecccc8" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b0cd6ecf978" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x2b0cd6ecfcf8" loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0cd6ecc060" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x2b0cd6ecc3d8" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x2b0cd6ecc6d0" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x2b0cd6ecca08" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x2b0cd6ec85b8" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6ec8348" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x2b0cd6ecbc78" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x2b0cd6eca3a0" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x2b0cd6ecb5b0" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b0cd6ecb340" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x2b0cd6ecac80" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6ecaa10" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x2b0cd6ec7020" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6ec8c80" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0cd6e302b0" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x2b0cd6e358a8" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x2b0cd6e35c08" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0cd6e30020" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x2b0cd6e646f0" loc="85:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e64480" loc="85:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0cd6e30e10" loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e30ba0" loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0cd6e2fcb0" loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e2f708" loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0cd6e2fa30" loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x2b0cd6e62118" loc="87:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0cd6e64e78" loc="87:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b0cd7128688" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0cd7128688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b0cd7121cf0" loc="98:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b0cd7122e20" loc="87:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0cd7125020" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0cd7128688"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b0cd7120690" loc="104:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b0cd7120420" loc="104:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b0cd7120e10" loc="110:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0cd71247f8" loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0cd71240d8" loc="70:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0cd71215c8" loc="93:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0cd7125958" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0cd7128688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0cd71256e8" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0cd7128688"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0cd7122020" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0cd7122708" loc="81:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b0cd6a27790" loc="177:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a27520" loc="177:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b0cd6a0a8b8" loc="88:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a0a648" loc="88:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b0cd69f8dd0" loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b0cd6a0c8a0" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a0c630" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b0cd6a08050" loc="121:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a07a68" loc="121:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0cd6a07da0" loc="121:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b0cd6a09bf0" loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a09638" loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0cd6a09970" loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b0cd6a053e0" loc="147:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b0cd69235b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a05170" loc="147:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b0cd6a28680" loc="162:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b0cd69235b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a28100" loc="162:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b0cd6a28400" loc="162:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b0cd69235b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b0cd6a06290" loc="136:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a06020" loc="136:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b0cd6a24b48" loc="187:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0cd6a24598" loc="187:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
                <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b0cd6a248c8" loc="187:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b0cd6a238e8" loc="195:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0cd5af7db8" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b0cd64dacb0" loc="72:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b0cd64da510" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0cd6a1bd58" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0cd6a1bd58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0cd6a39760" loc="136:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0cd6a17178" loc="83:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b0cd6a3bda8" loc="114:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0cd6a3b810" loc="114:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0cd6a3bb28" loc="114:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b0cd6a3b0d8" loc="98:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b0cd6a386b0" loc="151:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b0cd6a39e80" loc="144:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0cd6a178f0" loc="92:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b0cd6a19858" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0cd6a195e8" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b0cd6a3ad28" loc="129:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0cd6a3a790" loc="129:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0cd6a3aaa8" loc="129:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b0cd6a182d0" loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0cd6a18060" loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0cd6a18a78" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <struct loc="279:/usr/include/inttypes.h" ref="0x2b0cd5b13bf8" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2b0cd5b13df8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2b0cd5b13ea8" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="120:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c3b950" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="144:/usr/include/x86_64-linux-gnu/bits/types.h" ref="0x2b0cd632f898" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x2b0cd632fa98" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5afbc00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x2b0cd5afc0a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x2b0cd5afc150" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="11:TestSerial.h" ref="0x2b0cd6631ea0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c38020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x2b0cd683b8f0" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x2b0cd683a020" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x2b0cd6356130"/></type-tag>
      </field>
      <field name="it_value" ref="0x2b0cd683a0d0" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x2b0cd6356130"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="18:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x2b0cd6942d00" defined="" size="I:4" alignment="I:1">
      <field name="strength" ref="0x2b0cd6940588" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x2b0cd62b3658"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x2b0cd6940638" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x2b0cd69406e8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x2b0cd693f9a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_serial_packet" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim_serial_packet.h" ref="0x2b0cd69685f8" defined="" size="I:0" alignment="I:1">
    </struct>
    <struct name="gain_entry" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.h" ref="0x2b0cd67cc7e8" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x2b0cd67cb020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x2b0cd67cb0d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x2b0cd67cb180" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2b0cd67cc7e8"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="234:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70e1020" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x2b0cd70e1220" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x2b0cd70e12d0" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b0cd70e1380" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x2b0cd70e1430" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x2b0cd70e14e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.c" ref="0x2b0cd67dc6b8" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x2b0cd67dcc48" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x2b0cd67dccf8" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x2b0cd5af5720" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="75:/usr/include/x86_64-linux-gnu/bits/time.h" ref="0x2b0cd6356a28" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x2b0cd63550a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x2b0cd6336020"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x2b0cd6355150" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__suseconds_t" ref="0x2b0cd6336798"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="106:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd63619a0" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2b0cd6361ba0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd6361c50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5afb1e0" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b0cd5afb628" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <nx_struct name="CommandMsg" loc="28:TestSerial.h" ref="0x2b0cd69f1340" defined="" size="I:11" alignment="I:1">
      <field name="seqNum" ref="0x2b0cd69f0250" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="ledNum" ref="0x2b0cd69f0300" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="sender" ref="0x2b0cd69f03b0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="receiver" ref="0x2b0cd69f0460" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="sensor" ref="0x2b0cd69f0510" bit-offset="I:64" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="isAck" ref="0x2b0cd69f05c0" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <attribute name="number"  loc="NONE" ref="0x2b0cd5af1db0" size="V:" alignment="V:">
    </attribute>
    <struct loc="150:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c37a10" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x2b0cd6c37c10" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x2b0cd6c37cc0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x2b0cd6c37d70" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x2b0cd6c37e20" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x2b0cd6c37ed0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x2b0cd6c64020" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="76:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd6362d18" defined="" size="I:40" alignment="I:8">
      <field name="__data" ref="0x2b0cd6362f18" bit-offset="I:0" size="I:40">
        <type-tag size="I:40" alignment="I:8"><struct-ref name="__pthread_mutex_s" ref="0x2b0cd6363408"/></type-tag>
      </field>
      <field name="__size" ref="0x2b0cd6361020" bit-offset="I:0" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd63610d0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="117:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd63681b0" defined="" size="I:48" alignment="I:8">
      <field name="__lock" ref="0x2b0cd63683b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x2b0cd6368460" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x2b0cd6368510" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x2b0cd63685c0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x2b0cd6368670" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x2b0cd6368720" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x2b0cd63687d0" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x2b0cd6368880" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="node" loc="62:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/heap.c" ref="0x2b0cd66d2e50" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x2b0cd66d0450" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x2b0cd66d0500" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="MoteTableEntry" loc="41:TestSerial.h" ref="0x2b0cd69ee368" defined="" size="I:8" alignment="I:2">
      <field name="nodeId" ref="0x2b0cd69eed50" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="ackReceived" ref="0x2b0cd69eee00" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
      <field name="lastContact" ref="0x2b0cd69eeeb0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="expired" ref="0x2b0cd69ed020" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="29:/usr/include/x86_64-linux-gnu/bits/sigset.h" ref="0x2b0cd634e600" defined="" size="I:128" alignment="I:8">
      <field name="__val" ref="0x2b0cd634e800" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="serial_packet" loc="131:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x2b0cd6937198" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x2b0cd6937860" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2b0cd693ade8"/>
          <typename><typedef-ref name="serial_header_t" ref="0x2b0cd6938e28"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x2b0cd6937910" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h" ref="0x2b0cd6a29330" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct ref="0x2b0cd5aef4a0" size="V:" alignment="V:">
    </struct>
    <attribute name="integer"  loc="NONE" ref="0x2b0cd5af1b10" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="100:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h" ref="0x2b0cd66613e0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="22:/usr/include/_G_config.h" ref="0x2b0cd659a1d0" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x2b0cd659a3d0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x2b0cd6330b00"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x2b0cd659a480" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b0cd659c698"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x2b0cd659caa0"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="87:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x2b0cd693f020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_footer" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x2b0cd69344c0" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x2b0cd6934990" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x2b0cd69423c8"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x2b0cd69429b0"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x2b0cd666dde0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="combine"  loc="NONE" ref="0x2b0cd5af5078" size="V:" alignment="V:">
      <field name="fn" ref="0x2b0cd5af5278" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="153:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd636d078" defined="" size="I:56" alignment="I:8">
      <field name="__lock" ref="0x2b0cd636d278" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x2b0cd636d328" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x2b0cd636d3d8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x2b0cd636d488" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x2b0cd636d538" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x2b0cd636d5e8" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer" ref="0x2b0cd636d698" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__shared" ref="0x2b0cd636d748" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__pad1" ref="0x2b0cd636d7f8" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad2" ref="0x2b0cd636d8a8" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__flags" ref="0x2b0cd636d958" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="drand48_data" loc="418:/usr/include/stdlib.h" ref="0x2b0cd638da88" defined="" size="I:24" alignment="I:8">
      <field name="__x" ref="0x2b0cd638c850" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x2b0cd638c900" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x2b0cd638c9b0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x2b0cd638ca60" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x2b0cd638cb10" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="__locale_struct" loc="28:/usr/include/xlocale.h" ref="0x2b0cd62d9978" defined="" size="I:232" alignment="I:8">
      <field name="__locales" ref="0x2b0cd62d8d10" bit-offset="I:0" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x2b0cd62d9c08"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x2b0cd62d8dc0" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x2b0cd62d8e70" bit-offset="I:896" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x2b0cd62d8f20" bit-offset="I:960" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x2b0cd62de020" bit-offset="I:1024" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x2b0cd6934e48" defined="" size="I:4" alignment="I:1">
      <field name="tossim" ref="0x2b0cd69333c8" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x2b0cd6942d00"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x2b0cd6940840"/></typename>
        </type-tag>
      </field>
    </union>
    <union loc="132:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd6367c48" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2b0cd6367e48" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd6367ef8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <nx_struct name="serial_header" loc="123:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x2b0cd693ade8" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x2b0cd6938a10" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b0cd6923228"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2b0cd6938ac0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b0cd6923228"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x2b0cd6938b70" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x2b0cd6938c20" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x2b0cd6924de0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x2b0cd6938cd0" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x2b0cd69248e8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="TableMsg" loc="57:TestSerial.h" ref="0x2b0cd69ecbb0" defined="" size="I:19" alignment="I:1">
      <field name="sender" ref="0x2b0cd69ea8e0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="receiver" ref="0x2b0cd69ea990" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
        </type-int>
      </field>
      <field name="nodeId" ref="0x2b0cd69eaa40" bit-offset="I:24" size="I:8">
        <type-array elements="I:4" size="I:8" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
            <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="lastContact" ref="0x2b0cd69eaaf0" bit-offset="I:88" size="I:8">
        <type-array elements="I:4" size="I:8" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
            <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="126:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h" ref="0x2b0cd6c49078" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_header" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x2b0cd69367f8" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x2b0cd6936ed0" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x2b0cd6921020"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x2b0cd6942088"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x2b0cd6934020" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2b0cd693ade8"/>
          <typename><typedef-ref name="serial_header_t" ref="0x2b0cd6938e28"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="211:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70e6280" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x2b0cd6356130" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x2b0cd63566c8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x2b0cd6336020"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x2b0cd6356778" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5afe2b0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x2b0cd5afe5d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_internal_list" loc="61:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd63653e0" defined="" size="I:16" alignment="I:8">
      <field name="__prev" ref="0x2b0cd6365c88" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b0cd63653e0"/></type-tag>
        </type-pointer>
      </field>
      <field name="__next" ref="0x2b0cd6365d38" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b0cd63653e0"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="86:/usr/include/wchar.h" ref="0x2b0cd659c178" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x2b0cd659c378" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x2b0cd659c428" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <enum loc="126:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c3a2e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="27:/usr/include/_G_config.h" ref="0x2b0cd659acb0" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x2b0cd659aeb0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x2b0cd632f020"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x2b0cd6599020" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b0cd659c698"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x2b0cd659caa0"/></typename>
        </type-tag>
      </field>
    </struct>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5afc750" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x2b0cd5afcb98" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x2b0cd5afcc48" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <union loc="167:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70eb6d8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70eb8d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70eb988" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70ece90"/></type-tag>
      </field>
    </union>
    <union loc="193:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70e8228" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70e8428" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70e84d8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70e9af0"/></type-tag>
      </field>
    </union>
    <struct name="timezone" loc="57:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2b0cd6735490" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x2b0cd6735a08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x2b0cd6735ab8" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="138:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c39670" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="68:/usr/include/stdlib.h" ref="0x2b0cd6315b40" defined="" size="I:8" alignment="I:8">
      <field name="__uptr" ref="0x2b0cd6315d40" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x2b0cd630f098"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x2b0cd6315df0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <union name="wait" loc="67:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2b0cd630f098" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x2b0cd6315338" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x2b0cd63153e8" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd630fed8"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x2b0cd6315498" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd630ed30"/></type-tag>
      </field>
    </union>
    <struct loc="118:/usr/include/stdlib.h" ref="0x2b0cd6313c68" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2b0cd6313e68" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2b0cd6313f18" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="90:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70bb950" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="98:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70b8020" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70b8220" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70b82d0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70b9868"/></type-tag>
      </field>
    </union>
    <struct name="sim_event" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_event_queue.h" ref="0x2b0cd663ce98" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x2b0cd6650df0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x2b0cd6650ea0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x2b0cd6650f50" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x2b0cd664e030" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x2b0cd664e0e0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x2b0cd664e190" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x2b0cd664e260" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x2b0cd65a8020" size="V:" alignment="V:">
    </struct>
    <struct loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x2b0cd6a1c430" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b0cd6a1c630" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_sf_client_list" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim_serial_forwarder.h" ref="0x2b0cd70014c8" defined="" size="I:16" alignment="I:8">
      <field name="next" ref="0x2b0cd7001ae0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_sf_client_list" ref="0x2b0cd70014c8"/></type-tag>
        </type-pointer>
      </field>
      <field name="fd" ref="0x2b0cd7001b90" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="tossim_footer" loc="14:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x2b0cd69423c8" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x2b0cd6942858" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x2b0cd62c1090"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="206:/usr/include/libio.h" ref="0x2b0cd65a7490" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_packet.h" ref="0x2b0cd69103c8" defined="" size="I:0" alignment="I:1">
    </struct>
    <struct loc="123:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70b4078" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x2b0cd70b4278" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x2b0cd70b4328" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x2b0cd70b43d8" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x2b0cd70b4488" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b0cd70b4538" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="106:/usr/include/stdlib.h" ref="0x2b0cd6313170" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2b0cd6313370" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2b0cd6313420" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct loc="170:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70ece90" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x2b0cd70eb0d8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x2b0cd70eb188" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x2b0cd70eb238" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x2b0cd70eb2e8" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b0cd70eb398" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x2b0cd70eb448" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="191:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd636ccf0" defined="" size="I:8" alignment="I:8">
      <field name="__size" ref="0x2b0cd636cef0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd6374020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="196:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70e9af0" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x2b0cd70e9cf0" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x2b0cd70e9da0" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x2b0cd70e9e50" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x2b0cd70e9f00" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="104:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c3e758" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="673:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h" ref="0x2b0cd6bad5b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="202:/usr/include/math.h" ref="0x2b0cd6563348" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_metadata" loc="136:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x2b0cd6937e90" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x2b0cd6936358" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="93:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2b0cd6749558" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="98:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h" ref="0x2b0cd6662cc0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70bf838" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="253:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70df4b0" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x2b0cd70df6b0" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x2b0cd70df760" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x2b0cd70df810" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x2b0cd70df8c0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="295:/usr/include/math.h" ref="0x2b0cd65614d8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70d4020" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x2b0cd70d4220" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x2b0cd70d42d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x2b0cd70d4380" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x2b0cd70d4430" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x2b0cd70d44e0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x2b0cd70d4590" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b0cd70d4640" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="185:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70ebd60" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x2b0cd5af4850" size="V:" alignment="V:">
    </attribute>
    <struct name="_IO_FILE" loc="271:/usr/include/libio.h" ref="0x2b0cd659fb10" defined="" size="I:216" alignment="I:8">
      <field name="_flags" ref="0x2b0cd65a25e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x2b0cd65a2690" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x2b0cd65a2740" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x2b0cd65a27f0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x2b0cd65a28a0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x2b0cd65a2950" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x2b0cd65a2a00" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x2b0cd65a2ab0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x2b0cd65a2b60" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x2b0cd65a2c10" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x2b0cd65a2cc0" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x2b0cd65a2d70" bit-offset="I:704" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x2b0cd65a2e20" bit-offset="I:768" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x2b0cd65a8788"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x2b0cd65b3020" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x2b0cd65b30d0" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x2b0cd65b3180" bit-offset="I:928" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x2b0cd65b3230" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x2b0cd6330b00"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x2b0cd65b32e0" bit-offset="I:1024" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x2b0cd65b3390" bit-offset="I:1040" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x2b0cd65b3440" bit-offset="I:1048" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x2b0cd65b34f0" bit-offset="I:1088" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x2b0cd65a8480"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x2b0cd65b35a0" bit-offset="I:1152" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x2b0cd632f020"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x2b0cd65b3650" bit-offset="I:1216" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x2b0cd65b3700" bit-offset="I:1280" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x2b0cd65b37b0" bit-offset="I:1344" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x2b0cd65b3a60" bit-offset="I:1408" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x2b0cd65b3b10" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x2b0cd5af9660"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x2b0cd65b3bc0" bit-offset="I:1536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x2b0cd65b3c70" bit-offset="I:1568" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="hashtable" ref="0x2b0cd6661958" size="V:" alignment="V:">
    </struct>
    <struct loc="98:/usr/include/stdlib.h" ref="0x2b0cd63146c8" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x2b0cd63148c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x2b0cd6314978" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="heap" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/heap.h" ref="0x2b0cd66d8020" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x2b0cd66d8728" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x2b0cd66d87d8" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x2b0cd66d8888" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x2b0cd5af59c0" size="V:" alignment="V:">
    </attribute>
    <enum loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70bdc50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_marker" loc="186:/usr/include/libio.h" ref="0x2b0cd65a8788" defined="" size="I:24" alignment="I:8">
      <field name="_next" ref="0x2b0cd65a70a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x2b0cd65a8788"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x2b0cd65a7150" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x2b0cd65a7200" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="101:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70b9868" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x2b0cd70b9a68" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x2b0cd70b9b18" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x2b0cd70b9bc8" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x2b0cd70b9c78" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x2b0cd70b9d28" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="SensorMsg" loc="48:TestSerial.h" ref="0x2b0cd69ed490" defined="" size="I:19" alignment="I:1">
      <field name="version" ref="0x2b0cd69ec3d8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="sensor" ref="0x2b0cd69ec488" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
        </type-int>
      </field>
      <field name="interval" ref="0x2b0cd69ec538" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="sender" ref="0x2b0cd69ec5e8" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="count" ref="0x2b0cd69ec698" bit-offset="I:56" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
      <field name="readings" ref="0x2b0cd69ec748" bit-offset="I:72" size="I:10">
        <type-array elements="I:5" size="I:10" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
            <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="random_data" loc="349:/usr/include/stdlib.h" ref="0x2b0cd6378728" defined="" size="I:48" alignment="I:8">
      <field name="fptr" ref="0x2b0cd63775c0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b0cd5b097e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x2b0cd6377670" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b0cd5b097e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x2b0cd6377720" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b0cd5b097e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x2b0cd63777d0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x2b0cd6377880" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x2b0cd6377930" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x2b0cd63779e0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b0cd5b097e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x2b0cd6669020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c47988" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="312:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70d2c90" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70d2e90" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70d2f40" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70d23e0"/></type-tag>
      </field>
    </union>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x2b0cd683ec10" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x2b0cd683cf50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x2b0cd683b030" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x2b0cd683b0e0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x2b0cd683b190" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x2b0cd683b240" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x2b0cd683b2f0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x2b0cd683b3a0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x2b0cd683b450" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x2b0cd683b500" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x2b0cd683b5b0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x2b0cd683b660" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x2b0cd666c4b0" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x2b0cd666cad0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x2b0cd666cb80" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/>
              <typename><typedef-ref name="FILE" ref="0x2b0cd659d020"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct loc="85:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2b0cd630ed30" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x2b0cd630ef30" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x2b0cd6315020" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="48:/usr/include/ctype.h" ref="0x2b0cd65708b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="133:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70b2ed0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70b0100" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70b01b0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70b2570"/></type-tag>
      </field>
    </union>
    <struct loc="153:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70afc38" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x2b0cd70afe38" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x2b0cd70afee8" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x2b0cd70ee020" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x2b0cd70ee0d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x2b0cd70ee180" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x2b0cd70ee230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x2b0cd70ee2e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x2b0cd70ee390" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="radio_stats" loc="109:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x2b0cd693c970" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x2b0cd693a270" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x2b0cd693a320" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x2b0cd693a3d0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x2b0cd693a480" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x2b0cd693a530" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x2b0cd693a5e0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x2b0cd693a690" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x2b0cd693a740" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x2b0cd693a7f0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x2b0cd693a8a0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x2b0cd693a950" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5affe50" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b0cd5b001c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5b007c8" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x2b0cd5b00c50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x2b0cd5b00d00" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x2b0cd5b00db0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="atleastonce" loc="99:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h" ref="0x2b0cd6661078" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c488e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="83:/usr/include/wchar.h" ref="0x2b0cd659c698" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x2b0cd659c898" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x2b0cd659c948" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b0cd659c178"/></type-tag>
      </field>
    </struct>
    <enum loc="14:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h" ref="0x2b0cd6922020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c3e020" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x2b0cd6c3e220" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x2b0cd6c3e2d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x2b0cd6c3e380" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="67:/usr/include/x86_64-linux-gnu/sys/select.h" ref="0x2b0cd6354460" defined="" size="I:128" alignment="I:8">
      <field name="__fds_bits" ref="0x2b0cd6354660" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__fd_mask" ref="0x2b0cd6355828"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <union loc="206:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd6374d48" defined="" size="I:32" alignment="I:8">
      <field name="__size" ref="0x2b0cd63734f0" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd63735a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="250:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70dfba0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70dfda0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70dfe50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70df4b0"/></type-tag>
      </field>
    </union>
    <struct name="itimerval" loc="109:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2b0cd6748340" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x2b0cd6748a18" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x2b0cd6356a28"/></type-tag>
      </field>
      <field name="it_value" ref="0x2b0cd6748ac8" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x2b0cd6356a28"/></type-tag>
      </field>
    </struct>
    <nx_struct name="BeaconMsg" loc="37:TestSerial.h" ref="0x2b0cd69f0a30" defined="" size="I:2" alignment="I:1">
      <field name="sender" ref="0x2b0cd69f0e90" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="53:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd635cbf0" defined="" size="I:56" alignment="I:8">
      <field name="__size" ref="0x2b0cd635cdf0" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd635cea0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5afebe8" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x2b0cd5afef08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="sigevent" ref="0x2b0cd683a2f0" size="V:" alignment="V:">
    </struct>
    <enum loc="102:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x2b0cd693eb18" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x2b0cd6a1fc48" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b0cd6a1fe48" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5aff508" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b0cd5aff850" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x2b0cd673f458" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="231:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70e17d8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70e19d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70e1a88" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70e1020"/></type-tag>
      </field>
    </union>
    <struct loc="315:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70d23e0" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x2b0cd70d25e0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x2b0cd70d2690" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x2b0cd70d2740" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x2b0cd70d27f0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x2b0cd70d28a0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x2b0cd70d2950" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b0cd70d2a00" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__locale_data" ref="0x2b0cd62d9c08" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x2b0cd5af4da0" size="V:" alignment="V:">
    </attribute>
    <enum loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70c5608" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="120:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70b47b8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70b49b8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70b4a68" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70b4078"/></type-tag>
      </field>
    </union>
    <union loc="150:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70ee618" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70ee818" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70ee8c8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70afc38"/></type-tag>
      </field>
    </union>
    <enum loc="25:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h" ref="0x2b0cd6b595a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70b2570" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x2b0cd70b2770" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x2b0cd70b2820" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x2b0cd70b28d0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x2b0cd70b2980" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x2b0cd70b2a30" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x2b0cd70b2ae0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x2b0cd70b2b90" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x2b0cd70b2c40" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c463c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="150:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd636c078" defined="" size="I:56" alignment="I:8">
      <field name="__data" ref="0x2b0cd636c278" bit-offset="I:0" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref ref="0x2b0cd636d078"/></type-tag>
      </field>
      <field name="__size" ref="0x2b0cd636c328" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd636c3d8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <attribute name="unsafe"  loc="NONE" ref="0x2b0cd5af5c60" size="V:" alignment="V:">
    </attribute>
    <struct loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x2b0cd6a1cb98" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b0cd6a1cd98" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="115:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd6367020" defined="" size="I:48" alignment="I:8">
      <field name="__data" ref="0x2b0cd6367220" bit-offset="I:0" size="I:48">
        <type-tag size="I:48" alignment="I:8"><struct-ref ref="0x2b0cd63681b0"/></type-tag>
      </field>
      <field name="__size" ref="0x2b0cd63672d0" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd6367380" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h" ref="0x2b0cd66339f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="82:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70bc978" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5b03020" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b0cd5b03368" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_IO_FILE_plus" ref="0x2b0cd65b1328" size="V:" alignment="V:">
    </struct>
    <struct name="exception" loc="320:/usr/include/math.h" ref="0x2b0cd6572e08" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x2b0cd65717b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x2b0cd6571860" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x2b0cd6571910" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x2b0cd65719c0" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x2b0cd6571a70" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x2b0cd666b078" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x2b0cd666ba28" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x2b0cd666bad8" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x2b0cd666bb88" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x2b0cd666bc38" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/>
              <typename><typedef-ref name="FILE" ref="0x2b0cd659d020"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <union loc="297:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b0cd70d48d8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b0cd70d4ad8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b0cd70d4b88" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd70d4020"/></type-tag>
      </field>
    </union>
    <attribute name="C"  loc="NONE" ref="0x2b0cd5af45b0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x2b0cd6756700" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x2b0cd67555a0" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x2b0cd6755650" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x2b0cd6755700" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x2b0cd67557b0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x2b0cd6755860" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x2b0cd6755910" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <struct loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x2b0cd6a1b430" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b0cd6a1b630" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h" ref="0x2b0cd633dd70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="macro"  loc="NONE" ref="0x2b0cd5af53c8" size="V:" alignment="V:">
      <field name="macro_name" ref="0x2b0cd5af55c8" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h" ref="0x2b0cd6c64b98" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="212:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd6373e88" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2b0cd63720d8" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b0cd6372188" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <nx_struct name="tossim_header" loc="6:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x2b0cd6921020" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x2b0cd6921c18" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b0cd6923228"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2b0cd6921cc8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b0cd6923228"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x2b0cd6921d78" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x2b0cd6921e28" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x2b0cd6924de0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x2b0cd6921ed8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x2b0cd69248e8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="message_t" loc="14:/home/sensornet6/local/src/tinyos-2.x/tos/types/message.h" ref="0x2b0cd6933838" defined="" size="I:41" alignment="I:1">
      <field name="header" ref="0x2b0cd6932a40" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x2b0cd6932af0" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x2b0cd6932ba0" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x2b0cd6932c50" bit-offset="I:296" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="132:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b0cd6c3acb8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_noise_node_t" loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x2b0cd6755e88" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x2b0cd6753578" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x2b0cd6753628" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x2b0cd67536d8" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x2b0cd6753788" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x2b0cd6753838" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2b0cd6661958"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x2b0cd67538e8" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x2b0cd6753998" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x2b0cd6753a48" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x2b0cd6753af8" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="26:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h" ref="0x2b0cd69225e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="70:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2b0cd630fed8" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x2b0cd630e100" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x2b0cd630e1b0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x2b0cd630e260" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x2b0cd5af4af8" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b0cd5b01408" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x2b0cd5b01890" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x2b0cd5b01940" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x2b0cd5b019f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_mutex_s" loc="78:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b0cd6363408" defined="" size="I:40" alignment="I:8">
      <field name="__lock" ref="0x2b0cd6362228" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x2b0cd63622d8" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x2b0cd6362388" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x2b0cd6362438" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x2b0cd63624e8" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x2b0cd6362598" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x2b0cd6362648" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b0cd63653e0"/>
          <typename><typedef-ref name="__pthread_list_t" ref="0x2b0cd6363020"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="73:TestSerialC.nc" ref="0x2b0cd6b605c8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TestSerialC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="78:TestSerialC.nc" ref="0x2b0cd6b62598" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TestSerialC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="76:TestSerialC.nc" ref="0x2b0cd6b61608" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TestSerialC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc" ref="0x2b0cd70a2980" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc" ref="0x2b0cd70a1a48" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="119:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc" ref="0x2b0cd6fff8f0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x2b0cd69b5630" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2b0cd6e9cc50" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2b0cd6e9bcd0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2b0cd6f3de78" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc" ref="0x2b0cd6f35860" defined="" scoped="" size="I:64" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x2b0cd6f33250" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x2b0cd6f33300" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x2b0cd6f333b0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x2b0cd6f33460" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x2b0cd6f33510" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x2b0cd6f335c0" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x2b0cd5b09020"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x2b0cd6f33670" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x2b0cd6f33720" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x2b0cd6f337d0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
            <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x2b0cd6f33880" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2b0cd6f35860"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2b0cd6f35cb0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2b0cd72b5c18" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" ref="0x2b0cd70c1d90" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x2b0cd714cc10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2b0cd72eebc8" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x2b0cd72eedc8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x2b0cd72eee78" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x2b0cd72eef28" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x2b0cd72ed020" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x2b0cd72ed0d0" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2b0cd72a7638" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc" ref="0x2b0cd7317eb0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="ConstantSensorC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="randCM" ref="0x2b0cd6825020" loc="39:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x2b0cd68d9928" loc="283:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x2b0cd674d828" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x2b0cd68258c0" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__timezone" ref="0x2b0cd68458d8" loc="278:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="channelTable" ref="0x2b0cd66682d8" loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2b0cd6661958"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x2b0cd68676e8" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:80000" alignment="I:8">
        <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x2b0cd6755e88"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x2b0cd6753c50"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x2b0cd6669e48" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-array elements="I:229" size="I:3664" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x2b0cd666c4b0"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x2b0cd666ccd8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x2b0cd68451d0" loc="276:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x2b0cd680a7c8" loc="39:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x2b0cd6862c28" loc="292:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x2b0cd6721440" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x2b0cd66d8020"/>
        <typename><typedef-ref name="heap_t" ref="0x2b0cd66d89e0"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x2b0cd67a1960" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x2b0cd6868238" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randC" ref="0x2b0cd680aa30" loc="39:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x2b0cd68670c8" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0x2b0cd67a3730" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x2b0cd67a2580" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x2b0cd6868ba8" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x2b0cd6862898" loc="291:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x2b0cd67a2a28" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x2b0cd65b1748" loc="346:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2b0cd65b1328"/></type-tag>
    </variable>
    <variable name="randCD" ref="0x2b0cd680aca0" loc="39:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="j97" ref="0x2b0cd6825590" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x2b0cd66323e8" loc="79:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x2b0cd663bc20" loc="28:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="tzname" ref="0x2b0cd6845d88" loc="283:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x2b0cd66d2a30" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x2b0cd5aef7c8"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x2b0cd65b0088" loc="348:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2b0cd65b1328"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x2b0cd67a32e8" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x2b0cd67a1020" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x2b0cd6c30970" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x2b0cd67dbbf0" loc="10:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x2b0cd67dc6b8"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x2b0cd67dce50"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x2b0cd65b1bc8" loc="347:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2b0cd65b1328"/></type-tag>
    </variable>
    <variable name="csmaInitLow" ref="0x2b0cd67a4e68" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x2b0cd6868750" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_ticks" ref="0x2b0cd674d470" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
      </type-int>
    </variable>
    <variable name="__daylight" ref="0x2b0cd6845538" loc="277:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x2b0cd65d3920" loc="167:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x2b0cd67db558" loc="9:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2b0cd67cc7e8"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x2b0cd67cb2d8"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x2b0cd663b788" loc="27:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x2b0cd65d30c0" loc="165:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x2b0cd67866a0" loc="183:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x2b0cd674db80" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x2b0cd6572ae8" loc="307:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x2b0cd65614d8"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x2b0cd6572698"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x2b0cd67d9020" loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x2b0cd6563088" loc="161:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x2b0cd67a49f8" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdout" ref="0x2b0cd65d34f0" loc="166:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x2b0cd67a1dd0" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x2b0cd67a3be0" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x2b0cd67a14d8" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x2b0cd67a20c8" loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x2b0cd6825340" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="SensorTemperatureMsg" ref="0x2b0cd6a5db48" loc="62:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="SensorMsg" ref="0x2b0cd69ed490"/>
        <typename><typedef-ref name="SensorMsg" ref="0x2b0cd69ec8a0"/></typename>
      </type-tag>
    </variable>
    <variable name="sndRadio" ref="0x2b0cd6a601d8" loc="46:TestSerialC.nc">
      <documentation loc="45:TestSerialC.nc">
        <short>&#60; strores the current received message over serial</short>
      </documentation>
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="sndRadioLast" ref="0x2b0cd6a605b8" loc="47:TestSerialC.nc">
      <documentation loc="46:TestSerialC.nc">
        <short>&#60; strores the current sent message over radio</short>
      </documentation>
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="sndSensorSerial" ref="0x2b0cd6a5e3e0" loc="55:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="neighborTable" ref="0x2b0cd6a5ede0" loc="58:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-array elements="I:4" size="I:32" alignment="I:2">
        <type-tag size="I:8" alignment="I:2"><struct-ref name="MoteTableEntry" ref="0x2b0cd69ee368"/>
          <typename><typedef-ref name="MoteTableEntry" ref="0x2b0cd69ed178"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="beacon" ref="0x2b0cd6a60cd0" loc="49:TestSerialC.nc">
      <documentation loc="48:TestSerialC.nc">
        <short>&#60; strores the current received message over radio</short>
      </documentation>
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="sndSensor" ref="0x2b0cd6a5f410" loc="51:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="SensorLightMsg" ref="0x2b0cd6a5b020" loc="63:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="SensorMsg" ref="0x2b0cd69ed490"/>
        <typename><typedef-ref name="SensorMsg" ref="0x2b0cd69ec8a0"/></typename>
      </type-tag>
    </variable>
    <variable name="localSeqNumber" ref="0x2b0cd6a3c770" loc="40:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
      </type-int>
    </variable>
    <variable name="rcvSensor" ref="0x2b0cd6a5f798" loc="52:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="tableMsgSerial" ref="0x2b0cd6a5e020" loc="54:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="nodeBusy" ref="0x2b0cd6a615b0" loc="43:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="SensorHumidityMsg" ref="0x2b0cd6a5d750" loc="61:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="SensorMsg" ref="0x2b0cd69ed490"/>
        <typename><typedef-ref name="SensorMsg" ref="0x2b0cd69ec8a0"/></typename>
      </type-tag>
    </variable>
    <variable name="readingCountSensorTemperature" ref="0x2b0cd6a5b890" loc="66:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="sndSerial" ref="0x2b0cd6a61a68" loc="44:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="radioBusy" ref="0x2b0cd6a3cc00" loc="41:TestSerialC.nc">
      <documentation loc="40:TestSerialC.nc">
        <short>&#60; stores the msg sequence number</short>
      </documentation>
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="tableMsg" ref="0x2b0cd6a5fc18" loc="53:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="testCounter" ref="0x2b0cd6a5e770" loc="57:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
      </type-int>
    </variable>
    <variable name="rcvSerial" ref="0x2b0cd6a61df0" loc="45:TestSerialC.nc">
      <documentation loc="44:TestSerialC.nc">
        <short>&#60; strores the current sent message over serial</short>
      </documentation>
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="addr" ref="0x2b0cd6a5f088" loc="50:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
      </type-int>
    </variable>
    <variable name="readingCountSensorHumidity" ref="0x2b0cd6a5b458" loc="65:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="rcvRadio" ref="0x2b0cd6a60968" loc="48:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="readingCountSensorLight" ref="0x2b0cd6a5bc88" loc="67:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="radioSendQueue" ref="0x2b0cd6a5d378" loc="59:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-array elements="I:2" size="I:82" alignment="I:1">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
          <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="serialBusy" ref="0x2b0cd6a61130" loc="42:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x2b0cd69b21d8" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x2b0cd69b38d0" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x2b0cd69b3580" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x2b0cd69b3d58" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:12" size="I:12" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x2b0cd69b2700" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x2b0cd6df3b18" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x2b0cd6df3420" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x2b0cd6df3088" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x2b0cd6df3748" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x2b0cd6e34a48" loc="62:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x2b0cd6e34e30" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
          <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x2b0cd6ec5b18" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x2b0cd6ece590" loc="70:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x2b0cd6f10020" loc="294:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x2b0cd6ecd020" loc="72:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x2b0cd6ecd3e0" loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x2b0cd6ecd788" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
          <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x2b0cd6ecea00" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x2b0cd6ec4020" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x2b0cd6ec5328" loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x2b0cd6ecddc0" loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x2b0cd6ec5780" loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x2b0cd6f78a18" loc="201:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x2b0cd6f376c0" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x2b0cd6f78148" loc="198:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x2b0cd6f35548" loc="62:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x2b0cd6f76638" loc="203:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x2b0cd6f33c50" loc="79:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2b0cd6f35860"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2b0cd6f35cb0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x2b0cd6f76020" loc="202:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
          <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x2b0cd6f784c0" loc="200:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x2b0cd6f35020" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x2b0cd6f37360" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
          <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x2b0cd6f37a18" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x2b0cd7012138" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x2b0cd6fdad80" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x2b0cd6fda8f8" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x2b0cd7020e10" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </variable>
    <variable name="sendMsgPtr" ref="0x2b0cd701f7e8" loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
          <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="bufferPointer" ref="0x2b0cd701f220" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
          <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="base" ref="0x2b0cd714c9d0" loc="40:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x2b0cd714c400" loc="39:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x2b0cd714c0c8" loc="38:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x2b0cd714c648" loc="39:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x2b0cd71a44e0" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x2b0cd71a4020" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x2b0cd7252190" loc="480:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x2b0cd71c8940" loc="185:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x2b0cd71ab8c8" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x2b0cd71ab400" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x2b0cd7293358" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x2b0cd72936b0" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x2b0cd72eda70" loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x2b0cd72ed6d0" loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x2b0cd72eebc8"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x2b0cd72ed228"/></typename>
        </type-tag>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x2b0cd6bfb900" loc="1075:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x2b0cd6be4c58" loc="943:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x2b0cd6c1e928" loc="1132:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x2b0cd6bfd020" loc="1058:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x2b0cd6c41b58" loc="85:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x2b0cd6b93a38" loc="140:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x2b0cd6b97020" loc="81:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x2b0cd6bc6020" loc="786:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x2b0cd6c30328" loc="1299:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LEDS_LED4" ref="0x2b0cd6a4cbc0" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x2b0cd6c39070" loc="133:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x2b0cd70e48a0" loc="222:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x2b0cd6c42b38" loc="80:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x2b0cd6bd3620" loc="705:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x2b0cd6be6920" loc="924:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x2b0cd6c1fc40" loc="1126:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x2b0cd6c1a328" loc="1154:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x2b0cd6be7950" loc="919:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x2b0cd6c16950" loc="1182:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x2b0cd6bf8630" loc="1093:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x2b0cd6bf68f0" loc="1106:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x2b0cd6bed020" loc="876:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x2b0cd6be9020" loc="902:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x2b0cd693e898" loc="98:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x2b0cd6baa920" loc="687:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x2b0cd6bedc78" loc="882:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x2b0cd6be1938" loc="961:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x2b0cd6bca320" loc="763:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x2b0cd6bd0c88" loc="730:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x2b0cd6c34938" loc="1275:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x2b0cd6561858" loc="297:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x2b0cd70e3a08" loc="227:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x2b0cd6bf0328" loc="858:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x2b0cd6be7c58" loc="920:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x2b0cd70e3338" loc="225:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x2b0cd6c45670" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x2b0cd6bb6858" loc="269:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x2b0cd6bd2c40" loc="714:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x2b0cd6bf3310" loc="839:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x2b0cd6579a28" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x2b0cd6bbe898" loc="169:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x2b0cd6be4630" loc="939:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x2b0cd6c47ce8" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x2b0cd6c1dbe0" loc="1138:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x2b0cd6c18310" loc="1166:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x2b0cd6bb4498" loc="283:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x2b0cd6be1020" loc="956:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x2b0cd6c148f0" loc="1194:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x2b0cd6c0f020" loc="1222:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x2b0cd70c0b70" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x2b0cd6bf2630" loc="847:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x2b0cd6bf9628" loc="1086:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x2b0cd6baa020" loc="684:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x2b0cd6bb3de0" loc="298:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x2b0cd6bcb948" loc="760:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x2b0cd6bc2928" loc="817:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x2b0cd6c06328" loc="1004:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x2b0cd70e56a0" loc="217:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x2b0cd6b9b390" loc="36:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x2b0cd6bf3c10" loc="844:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x2b0cd6c10938" loc="1218:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x2b0cd6c0b020" loc="1246:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x2b0cd6be2648" loc="953:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x2b0cd6c3c7b0" loc="109:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x2b0cd70e3020" loc="224:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x2b0cd6beac50" loc="901:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x2b0cd6bbe528" loc="166:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x2b0cd6c49730" loc="128:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x2b0cd70bc6f8" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x2b0cd70ba618" loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x2b0cd6bf5640" loc="1112:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x2b0cd70c5ca0" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x2b0cd6bce650" loc="740:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x2b0cd6bf8328" loc="1092:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x2b0cd6c36340" loc="1261:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x2b0cd656c2a8" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x2b0cd693c648" loc="106:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x2b0cd6b9a4b0" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x2b0cd6bbda60" loc="182:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x2b0cd6b916f0" loc="154:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x2b0cd6758d68" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x2b0cd6be3c40" loc="948:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x2b0cd6c06020" loc="1003:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x2b0cd6bc8958" loc="779:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x2b0cd6bc3c38" loc="811:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x2b0cd6bc1600" loc="821:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x2b0cd6c36020" loc="1258:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x2b0cd6bc5320" loc="794:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x2b0cd6c33c18" loc="1283:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x2b0cd6c07330" loc="997:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x2b0cd6c40988" loc="89:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x2b0cd70bb300" loc="85:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x2b0cd6bbc8a8" loc="194:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x2b0cd6bc9c40" loc="773:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x2b0cd6bab628" loc="679:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x2b0cd6bd0960" loc="727:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x2b0cd6c44358" loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x2b0cd6c44d10" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x2b0cd6bd1c40" loc="721:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x2b0cd693f6a0" loc="89:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x2b0cd6c03910" loc="1025:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x2b0cd70e59e8" loc="218:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x2b0cd6c38398" loc="145:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x2b0cd6561ad0" loc="298:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x2b0cd660dc90" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x2b0cd6c386c8" loc="146:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x2b0cd6bb6bc8" loc="272:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x2b0cd6c35620" loc="1267:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x2b0cd6c32930" loc="1289:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x2b0cd6c02020" loc="1027:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x2b0cd6c1b620" loc="1148:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x2b0cd6c17c20" loc="1176:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x2b0cd6c12320" loc="1204:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x2b0cd6c0e930" loc="1232:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x2b0cd6bc5020" loc="793:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x2b0cd6be5950" loc="933:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x2b0cd6c0e020" loc="1227:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x2b0cd6bc7330" loc="782:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x2b0cd6bde920" loc="980:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x2b0cd6c0a600" loc="1255:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x2b0cd70c0070" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x2b0cd6c02340" loc="1030:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x2b0cd6b99020" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x2b0cd6b9b6f0" loc="39:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x2b0cd6bb7dd8" loc="264:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x2b0cd6bd1328" loc="718:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x2b0cd70c0418" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x2b0cd6bbbdd0" loc="216:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LEDS_LED7" ref="0x2b0cd6a4bb10" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x2b0cd6bc4638" loc="802:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x2b0cd6c33020" loc="1277:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x2b0cd6c31950" loc="1296:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x2b0cd6bd4020" loc="696:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x2b0cd6bf0928" loc="860:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x2b0cd6c1f328" loc="1123:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x2b0cd6bb9a68" loc="238:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x2b0cd693da10" loc="103:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x2b0cd6b936e0" loc="139:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="AM_SENSORMSG" ref="0x2b0cd69b7870" loc="14:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x2b0cd6c1b948" loc="1151:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x2b0cd6bf6020" loc="1103:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x2b0cd6b94bf8" loc="134:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x2b0cd6c399d0" loc="139:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x2b0cd6bf4620" loc="1117:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x2b0cd6c1cc20" loc="1145:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x2b0cd6c17320" loc="1173:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x2b0cd6c13920" loc="1201:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x2b0cd6c393b0" loc="134:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x2b0cd70bf3d8" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x2b0cd70e36a0" loc="226:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x2b0cd6757c20" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x2b0cd6bb5a40" loc="278:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x2b0cd6bcfc40" loc="735:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x2b0cd6c34020" loc="1272:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x2b0cd6c35320" loc="1266:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x2b0cd6c32630" loc="1288:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x2b0cd6bf2c38" loc="849:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x2b0cd6bf2020" loc="845:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x2b0cd6be8938" loc="912:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x2b0cd6c493a0" loc="127:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x2b0cd6bee630" loc="873:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x2b0cd66c6968" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x2b0cd6c03020" loc="1022:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x2b0cd6c43a60" loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x2b0cd6bb21d0" loc="301:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x2b0cd6bb1020" loc="313:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x2b0cd6578878" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x2b0cd6c01c50" loc="1040:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x2b0cd6bf9320" loc="1085:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x2b0cd6bc0020" loc="826:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x2b0cd6c3bca0" loc="121:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x2b0cd6bb9390" loc="232:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x2b0cd6bebc60" loc="894:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x2b0cd6be0950" loc="968:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x2b0cd6bc2330" loc="815:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x2b0cd6b976f0" loc="87:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x2b0cd6bd3928" loc="706:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="AM_BEACONTIMEOUT" ref="0x2b0cd69cf718" loc="18:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x2b0cd6c15938" loc="1187:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x2b0cd6c10020" loc="1215:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x2b0cd6c0c630" loc="1243:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x2b0cd6bbddc0" loc="185:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x2b0cd6bbd390" loc="176:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x2b0cd6be2328" loc="950:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x2b0cd6bb4b60" loc="287:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x2b0cd6c46d18" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x2b0cd6c43730" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x2b0cd6c3c188" loc="107:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x2b0cd6c0d920" loc="1237:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x2b0cd6bbe1b8" loc="163:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x2b0cd6bcd630" loc="745:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x2b0cd6b93370" loc="136:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x2b0cd6bb6508" loc="268:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x2b0cd6bc8328" loc="775:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x2b0cd66c6330" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x2b0cd6c449d8" loc="70:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x2b0cd6c433f0" loc="73:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x2b0cd673f7f8" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x2b0cd6c41828" loc="84:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x2b0cd6bc2c10" loc="818:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x2b0cd6bfa948" loc="1082:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x2b0cd6be3328" loc="945:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x2b0cd6c1d020" loc="1134:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x2b0cd6c19620" loc="1162:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x2b0cd6b927f0" loc="146:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x2b0cd6bb7020" loc="254:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x2b0cd6b598b0" loc="27:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x2b0cd6b964a0" loc="99:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LEDS_LED2" ref="0x2b0cd6a4c210" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x2b0cd6c1e328" loc="1128:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x2b0cd6c1a938" loc="1156:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x2b0cd6c15020" loc="1184:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x2b0cd6c11650" loc="1212:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x2b0cd6be8328" loc="910:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x2b0cd6bd4c30" loc="700:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x2b0cd6c00928" loc="1044:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x2b0cd6c06638" loc="1005:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x2b0cd6bf5020" loc="1108:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x2b0cd6c08350" loc="992:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x2b0cd6bc9328" loc="770:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x2b0cd6ba9020" loc="689:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x2b0cd6c04c30" loc="1021:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x2b0cd70eab18" loc="189:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x2b0cd6bec330" loc="884:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x2b0cd6bca920" loc="765:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x2b0cd6c3a020" loc="122:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x2b0cd70e5358" loc="216:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x2b0cd6bea328" loc="896:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x2b0cd6bf38f0" loc="841:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x2b0cd6bffc60" loc="1052:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x2b0cd673fbf0" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AM_SENDRADIOQ_LEN" ref="0x2b0cd69cfde8" loc="20:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x2b0cd6be1c38" loc="962:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x2b0cd6b9bd68" loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x2b0cd6be4020" loc="937:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x2b0cd6c188f0" loc="1168:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x2b0cd6c13020" loc="1196:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x2b0cd6c0f600" loc="1224:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x2b0cd6c0bc30" loc="1252:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x2b0cd6bf9c38" loc="1088:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x2b0cd6baa620" loc="686:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x2b0cd6c09320" loc="985:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x2b0cd6c421a8" loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x2b0cd6563528" loc="204:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x2b0cd6bb3a68" loc="295:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x2b0cd70bbc80" loc="91:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x2b0cd6757518" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x2b0cd70bd7d0" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x2b0cd6b97dc0" loc="93:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x2b0cd6bfc638" loc="1067:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x2b0cd6c0b630" loc="1248:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x2b0cd6bf1320" loc="851:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x2b0cd6749be0" loc="99:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x2b0cd6be8c38" loc="913:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x2b0cd6bea950" loc="900:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x2b0cd6bfd970" loc="1063:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x2b0cd6bbcc08" loc="197:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x2b0cd6bf5c40" loc="1114:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x2b0cd6c1c320" loc="1142:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x2b0cd6bcb328" loc="756:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x2b0cd6bce020" loc="736:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x2b0cd6c36940" loc="1263:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x2b0cd6bcc948" loc="753:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x2b0cd6bccc50" loc="754:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x2b0cd6be5320" loc="929:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x2b0cd6befc78" loc="870:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x2b0cd6bb9708" loc="235:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x2b0cd6bef020" loc="864:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x2b0cd6c08960" loc="994:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x2b0cd6bbb710" loc="210:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x2b0cd6c07640" loc="998:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x2b0cd6bfe630" loc="1055:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x2b0cd6bfb020" loc="1072:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x2b0cd6bc7c50" loc="785:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x2b0cd6bc3328" loc="808:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x2b0cd6bc1310" loc="820:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x2b0cd6c32310" loc="1285:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x2b0cd6bb2548" loc="304:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x2b0cd6b91378" loc="151:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x2b0cd6bb3020" loc="288:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x2b0cd6be2938" loc="954:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x2b0cd6bfac48" loc="1083:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x2b0cd6bf7320" loc="1097:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x2b0cd6c414f8" loc="83:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x2b0cd6c3cac8" loc="110:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x2b0cd6563a50" loc="208:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x2b0cd6beb330" loc="891:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x2b0cd6bd0328" loc="723:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2000" name="AM_BEACONINTERVAL" ref="0x2b0cd69cf3a0" loc="17:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x2b0cd6bff020" loc="1046:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x2b0cd6bb4140" loc="282:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x2b0cd6bb16f8" loc="319:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x2b0cd6c31020" loc="1291:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x2b0cd6633c88" loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x2b0cd66c6020" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x2b0cd6c623f0" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x2b0cd6c16320" loc="1178:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x2b0cd6c12920" loc="1206:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x2b0cd6c0d020" loc="1234:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x2b0cd6c63b98" loc="58:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x2b0cd6bc4948" loc="803:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_COMMANDMSG" ref="0x2b0cd69b71d0" loc="12:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x2b0cd70bfb58" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x2b0cd6bcd938" loc="746:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x2b0cd6561d50" loc="299:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x2b0cd6ba9628" loc="691:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x2b0cd6be9928" loc="905:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x2b0cd6bf8930" loc="1094:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x2b0cd6c49af8" loc="129:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x2b0cd6c01020" loc="1034:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x2b0cd6c1e638" loc="1131:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x2b0cd70bb610" loc="86:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x2b0cd6bc7948" loc="784:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x2b0cd666c168" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x2b0cd6b9b020" loc="33:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LEDS_LED5" ref="0x2b0cd6a4b140" loc="49:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x2b0cd6c30020" loc="1298:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x2b0cd70ba328" loc="93:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x2b0cd6bd4620" loc="698:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x2b0cd6bd3320" loc="704:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x2b0cd6bb8878" loc="250:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x2b0cd6be6620" loc="923:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x2b0cd6c1f938" loc="1125:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x2b0cd6c1a020" loc="1153:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x2b0cd6c16648" loc="1181:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x2b0cd6bde020" loc="977:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x2b0cd6bdf630" loc="974:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x2b0cd6bf6600" loc="1105:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x2b0cd6c43d90" loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x2b0cd6bed968" loc="881:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x2b0cd6bb8518" loc="247:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x2b0cd6bca020" loc="762:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x2b0cd6bb5020" loc="273:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x2b0cd6bb47f0" loc="284:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x2b0cd6bcf630" loc="733:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NREADINGS" ref="0x2b0cd69ce850" loc="23:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x2b0cd6c34630" loc="1274:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x2b0cd6becc50" loc="887:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x2b0cd6c45978" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x2b0cd6bd2940" loc="713:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x2b0cd6beec40" loc="875:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x2b0cd6758428" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x2b0cd6c1d8f0" loc="1137:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x2b0cd6c18020" loc="1165:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x2b0cd6576528" loc="60:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x2b0cd6be2c38" loc="955:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x2b0cd6c14600" loc="1193:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x2b0cd6c10c48" loc="1221:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x2b0cd6bb28c0" loc="307:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x2b0cd6bf2328" loc="846:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x2b0cd6bbec08" loc="172:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x2b0cd6bc5c50" loc="799:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x2b0cd6bc0620" loc="828:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x2b0cd6bbf630" loc="835:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x2b0cd6bcc638" loc="752:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x2b0cd6c00328" loc="1042:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x2b0cd6bcb648" loc="759:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x2b0cd657bbd0" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x2b0cd6c02c38" loc="1033:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x2b0cd70bd020" loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x2b0cd6bd2020" loc="708:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x2b0cd6b96b70" loc="105:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x2b0cd6c08c68" loc="995:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x2b0cd6c10630" loc="1217:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x2b0cd6c0cc40" loc="1245:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x2b0cd6bab020" loc="677:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x2b0cd6babc28" loc="681:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x2b0cd6b92b60" loc="149:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x2b0cd6c46708" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x2b0cd6c3eaa8" loc="105:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x2b0cd6bf5340" loc="1111:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x2b0cd6c62020" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x2b0cd6bcd020" loc="743:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x2b0cd6bf8020" loc="1091:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x2b0cd6c44698" loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x2b0cd6bfd350" loc="1061:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x2b0cd6c3b198" loc="112:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x2b0cd6c411c8" loc="82:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x2b0cd6bb76f0" loc="258:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x2b0cd6be3938" loc="947:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x2b0cd6c1d600" loc="1136:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x2b0cd6c07c78" loc="1002:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x2b0cd6b93d90" loc="141:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x2b0cd6c19c00" loc="1164:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x2b0cd6c14310" loc="1192:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x2b0cd6572020" loc="300:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x2b0cd6bc6640" loc="790:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x2b0cd6c0abe0" loc="1257:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x2b0cd6c33928" loc="1282:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x2b0cd6c07020" loc="996:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x2b0cd6bc9938" loc="772:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x2b0cd6b981b8" loc="69:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x2b0cd6bd1938" loc="720:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x2b0cd6bab928" loc="680:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x2b0cd6c05310" loc="1011:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x2b0cd6b91dc8" loc="160:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x2b0cd70e65c8" loc="212:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x2b0cd6c49e78" loc="130:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x2b0cd65a7c68" loc="210:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x2b0cd6c1b320" loc="1147:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x2b0cd6c17920" loc="1175:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x2b0cd6c12020" loc="1203:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x2b0cd6c0e630" loc="1231:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x2b0cd6bc2020" loc="812:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x2b0cd6be5c58" loc="934:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x2b0cd6c13600" loc="1198:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x2b0cd6bc7640" loc="783:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x2b0cd6bde620" loc="979:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x2b0cd6c0fbe0" loc="1226:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x2b0cd6c0a310" loc="1254:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x2b0cd6b95a90" loc="119:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x2b0cd6bfdc78" loc="1064:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x2b0cd6c63438" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x2b0cd70be020" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x2b0cd6bdec48" loc="983:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x2b0cd6bf0020" loc="857:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x2b0cd6bd2340" loc="711:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x2b0cd6c04930" loc="1020:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x2b0cd6bc3020" loc="807:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x2b0cd6bbc1c8" loc="188:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x2b0cd679f020" loc="62:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x2b0cd6b95390" loc="111:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x2b0cd6ba9c48" loc="695:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x2b0cd6bf0628" loc="859:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x2b0cd6be7320" loc="915:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x2b0cd6be7648" loc="918:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x2b0cd6bfa328" loc="1078:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x2b0cd6c1f020" loc="1122:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x2b0cd6bb8be8" loc="253:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x2b0cd6c430b0" loc="72:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x2b0cd6bbac00" loc="226:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_MAXNODEID" ref="0x2b0cd69ce520" loc="22:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x2b0cd65a7998" loc="209:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x2b0cd6bfb600" loc="1074:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x2b0cd6c05610" loc="1012:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x2b0cd6bf7c20" loc="1102:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x2b0cd693c248" loc="105:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x2b0cd6c63830" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x2b0cd6bf4320" loc="1116:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x2b0cd6c1c920" loc="1144:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x2b0cd6c17020" loc="1172:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x2b0cd6bcf938" loc="734:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x2b0cd6c35c48" loc="1271:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x2b0cd70e5020" loc="215:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x2b0cd6c35020" loc="1265:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x2b0cd6c3edc0" loc="106:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x2b0cd6bd1020" loc="717:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x2b0cd6be6c40" loc="927:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AM_TABLEMSG" ref="0x2b0cd69b7bb0" loc="15:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x2b0cd6bf2938" loc="848:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x2b0cd6be8630" loc="911:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x2b0cd6bee328" loc="872:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x2b0cd679f658" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x2b0cd6c04020" loc="1015:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x2b0cd6bc1908" loc="822:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x2b0cd6c40020" loc="86:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x2b0cd6bfbc00" loc="1076:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x2b0cd6b99a88" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x2b0cd6bb1a70" loc="322:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x2b0cd70be778" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x2b0cd6be1630" loc="960:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x2b0cd6be0020" loc="963:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x2b0cd6bdf930" loc="975:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x2b0cd6bf9020" loc="1084:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x2b0cd6c3a690" loc="127:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x2b0cd6bff620" loc="1048:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x2b0cd6bb9020" loc="229:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x2b0cd6beb950" loc="893:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x2b0cd6bc0320" loc="827:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x2b0cd6b98bd8" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LEDS_LED0" ref="0x2b0cd6a297b0" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x2b0cd6c19020" loc="1158:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x2b0cd6bc6340" loc="789:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x2b0cd6bbfc30" loc="837:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x2b0cd6c15630" loc="1186:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x2b0cd6c11c60" loc="1214:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x2b0cd6c09c30" loc="988:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x2b0cd6c0c328" loc="1242:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x2b0cd70ea7c8" loc="188:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x2b0cd6bcc020" loc="750:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x2b0cd6be2020" loc="949:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1000" name="DEFAULT_SAMPLING_INTERVAL" ref="0x2b0cd69cec20" loc="24:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x2b0cd6c45060" loc="62:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x2b0cd6be0320" loc="964:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x2b0cd6be0c50" loc="969:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x2b0cd6c11020" loc="1208:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x2b0cd6c0d620" loc="1236:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x2b0cd70e6bf8" loc="214:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x2b0cd6bc4020" loc="800:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x2b0cd65722b8" loc="301:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x2b0cd6bcd328" loc="744:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x2b0cd6c01620" loc="1036:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x2b0cd6bb9dc8" loc="241:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x2b0cd6bf7020" loc="1096:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x2b0cd6be3020" loc="944:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x2b0cd6bfc940" loc="1068:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x2b0cd6c1ec18" loc="1133:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x2b0cd6c19330" loc="1161:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x2b0cd6b97a50" loc="90:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LEDS_LED3" ref="0x2b0cd6a4c6e8" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x2b0cd6bbba70" loc="213:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x2b0cd6c00020" loc="1041:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x2b0cd65a76b0" loc="208:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x2b0cd6bd4928" loc="699:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x2b0cd6c1e020" loc="1127:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x2b0cd6c1a630" loc="1155:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x2b0cd6c16c58" loc="1183:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x2b0cd6c11348" loc="1211:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x2b0cd6bfc330" loc="1066:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1000" name="AM_SENDPERIOD" ref="0x2b0cd69cf020" loc="16:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x2b0cd6bf6be0" loc="1107:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x2b0cd6bed328" loc="877:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x2b0cd6be9328" loc="903:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x2b0cd70bf020" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x2b0cd6bc9020" loc="769:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x2b0cd6baac20" loc="688:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x2b0cd6c63020" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x2b0cd6c3c498" loc="108:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x2b0cd6bef950" loc="867:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x2b0cd6bec020" loc="883:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x2b0cd6bca620" loc="764:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x2b0cd6bb5d98" loc="279:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x2b0cd6bcf020" loc="731:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x2b0cd6748020" loc="103:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x2b0cd6c34c40" loc="1276:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x2b0cd6c31648" loc="1295:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x2b0cd6c3b4f0" loc="116:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x2b0cd6bf1948" loc="855:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x2b0cd6be6020" loc="921:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x2b0cd6c40350" loc="87:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x2b0cd6c45368" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x2b0cd70e41d8" loc="220:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x2b0cd6bf3600" loc="840:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x2b0cd6b92498" loc="145:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x2b0cd6bad888" loc="675:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x2b0cd70beb30" loc="68:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x2b0cd6b95720" loc="116:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x2b0cd693e140" loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x2b0cd6b9ba28" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x2b0cd65776d0" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x2b0cd6be4328" loc="938:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x2b0cd6c04610" loc="1017:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x2b0cd6c18600" loc="1167:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x2b0cd6be1320" loc="957:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x2b0cd6c14be0" loc="1195:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x2b0cd6c0f310" loc="1223:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x2b0cd6c0b940" loc="1251:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x2b0cd70e5d40" loc="219:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x2b0cd6bf9930" loc="1087:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x2b0cd6baa320" loc="685:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x2b0cd6bc7020" loc="781:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x2b0cd6bc0c28" loc="830:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x2b0cd6c09020" loc="984:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x2b0cd6c00c28" loc="1045:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x2b0cd6c48248" loc="131:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x2b0cd6bc0920" loc="829:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x2b0cd6bb36f0" loc="292:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x2b0cd6bfec48" loc="1057:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x2b0cd6b97390" loc="84:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x2b0cd6c0b328" loc="1247:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x2b0cd6bf1020" loc="850:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x2b0cd6bcb020" loc="755:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2000" name="AM_ACKTIMEOUT" ref="0x2b0cd69ce1d0" loc="21:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x2b0cd65a6020" loc="211:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x2b0cd6bfe020" loc="1053:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x2b0cd6bfa648" loc="1081:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x2b0cd6b9ab78" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x2b0cd656a020" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x2b0cd6bf5940" loc="1113:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOS_AM_GROUP" ref="0x2b0cd69228e0" loc="27:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x2b0cd6c1c020" loc="1141:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x2b0cd6bce958" loc="741:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x2b0cd6c36640" loc="1262:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x2b0cd6bb3378" loc="289:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x2b0cd70bc020" loc="76:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x2b0cd693ddc8" loc="104:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="AM_BEACONMSG" ref="0x2b0cd69b7520" loc="13:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x2b0cd6b91a68" loc="157:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x2b0cd6bbb020" loc="202:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x2b0cd6c08658" loc="993:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x2b0cd6bb7378" loc="255:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x2b0cd6561020" loc="212:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x2b0cd656d450" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="AM_TABLESIZE" ref="0x2b0cd69cfa68" loc="19:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x2b0cd6c3a9f8" loc="128:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x2b0cd693fd38" loc="95:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x2b0cd6bba1c8" loc="219:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x2b0cd6bc3630" loc="809:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x2b0cd6bc1020" loc="819:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x2b0cd6c32020" loc="1284:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x2b0cd6bc5920" loc="796:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x2b0cd6b99398" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x2b0cd6bc8020" loc="774:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x2b0cd660d990" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x2b0cd6563d08" loc="210:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x2b0cd6beb020" loc="890:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x2b0cd6b98878" loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x2b0cd6bd0020" loc="722:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x2b0cd6c476c8" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x2b0cd70c07c0" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x2b0cd6c05be8" loc="1014:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x2b0cd6c01320" loc="1035:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x2b0cd6c424d8" loc="78:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x2b0cd67578b8" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x2b0cd6bb56e8" loc="277:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x2b0cd6c04310" loc="1016:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x2b0cd70ea488" loc="187:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x2b0cd6c47328" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x2b0cd6c35920" loc="1268:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x2b0cd6c32c30" loc="1290:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x2b0cd6c44020" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x2b0cd6c01928" loc="1037:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x2b0cd6bc2620" loc="816:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x2b0cd6bfcc50" loc="1071:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x2b0cd70be3c8" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x2b0cd6c16020" loc="1177:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x2b0cd6c12620" loc="1205:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x2b0cd6c0ec30" loc="1233:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x2b0cd6bc6c48" loc="792:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x2b0cd6be5648" loc="932:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x2b0cd6c0e310" loc="1228:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x2b0cd6c0a8f0" loc="1256:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x2b0cd6bbd020" loc="173:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x2b0cd6c09620" loc="986:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x2b0cd6c33638" loc="1281:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x2b0cd70e4538" loc="221:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x2b0cd6b93020" loc="135:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x2b0cd679f330" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x2b0cd6be9628" loc="904:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:229" name="SIM_LOG_OUTPUT_COUNT" ref="0x2b0cd66698a8" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x2b0cd6bdf020" loc="970:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x2b0cd70bd3f8" loc="70:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x2b0cd693f328" loc="88:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x2b0cd6bde320" loc="978:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x2b0cd6bc6940" loc="791:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x2b0cd6c03610" loc="1024:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x2b0cd6bbb3a0" loc="207:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x2b0cd6bc8c60" loc="780:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x2b0cd6c33328" loc="1278:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="LEDS_LED6" ref="0x2b0cd6a4b618" loc="50:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x2b0cd6c31c58" loc="1297:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x2b0cd70bb020" loc="84:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x2b0cd6bd4320" loc="697:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x2b0cd66c6640" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x2b0cd6bd3020" loc="703:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x2b0cd6bf0c28" loc="861:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x2b0cd6b92140" loc="144:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x2b0cd6be8020" loc="909:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x2b0cd6be6320" loc="922:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x2b0cd6c1f630" loc="1124:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x2b0cd6c1bc50" loc="1152:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x2b0cd6bf6310" loc="1104:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x2b0cd6bf4920" loc="1118:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x2b0cd6bed658" loc="880:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x2b0cd6c1b020" loc="1146:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x2b0cd6bcbc48" loc="761:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x2b0cd6c17620" loc="1174:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x2b0cd6c13c20" loc="1202:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x2b0cd656e640" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x2b0cd6bcf328" loc="732:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x2b0cd6c34328" loc="1273:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x2b0cd6bab328" loc="678:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x2b0cd6bec948" loc="886:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x2b0cd6bd2640" loc="712:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x2b0cd6c45c80" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x2b0cd6bee938" loc="874:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x2b0cd6be0630" loc="965:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x2b0cd6bb7a60" loc="261:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x2b0cd6b94898" loc="131:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x2b0cd6c02948" loc="1032:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x2b0cd6bb1398" loc="316:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x2b0cd6bf3020" loc="838:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x2b0cd6bea020" loc="895:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x2b0cd6bdf340" loc="973:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x2b0cd6c03310" loc="1023:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x2b0cd6b96140" loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x2b0cd6bd3c30" loc="707:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x2b0cd6bc5620" loc="795:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x2b0cd6bf1640" loc="854:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x2b0cd6c15c40" loc="1188:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x2b0cd6c10328" loc="1216:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x2b0cd6c0c938" loc="1244:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x2b0cd6c48c20" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x2b0cd6c058f8" loc="1013:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x2b0cd65637d0" loc="206:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x2b0cd70bccb0" loc="83:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x2b0cd6bfb310" loc="1073:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x2b0cd6c46140" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x2b0cd70bc370" loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x2b0cd70ea140" loc="186:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x2b0cd6758070" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x2b0cd6bdfc30" loc="976:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x2b0cd6c40680" loc="88:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x2b0cd6b94528" loc="128:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x2b0cd6c46a10" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x2b0cd6756380" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x2b0cd6c0dc20" loc="1238:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x2b0cd6bcec60" loc="742:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x2b0cd6bff950" loc="1051:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x2b0cd6bc8630" loc="776:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x2b0cd6bbf020" loc="831:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x2b0cd6bff320" loc="1047:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x2b0cd6c47020" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x2b0cd6be3630" loc="946:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x2b0cd6c1d310" loc="1135:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x2b0cd6c19910" loc="1163:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x2b0cd6c14020" loc="1191:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x2b0cd693e4f0" loc="97:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x2b0cd656b108" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x2b0cd6bef640" loc="866:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x2b0cd6b9a140" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x2b0cd6bc3930" loc="810:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x2b0cd6c06948" loc="1006:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x2b0cd6bfe940" loc="1056:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x2b0cd6b91020" loc="150:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x2b0cd6c07970" loc="1001:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x2b0cd6bc9630" loc="771:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x2b0cd6ba9320" loc="690:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x2b0cd6c02640" loc="1031:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x2b0cd6bba538" loc="222:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x2b0cd70e68e0" loc="213:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x2b0cd6bec640" loc="885:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x2b0cd660d070" loc="52:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x2b0cd660d678" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x2b0cd6bd1630" loc="719:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x2b0cd6bcac20" loc="766:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x2b0cd6bc1c08" loc="823:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x2b0cd6bb5378" loc="274:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x2b0cd6bea630" loc="897:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x2b0cd70ba020" loc="92:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x2b0cd6c39ce8" loc="140:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x2b0cd6bfd660" loc="1062:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x2b0cd6922348" loc="15:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x2b0cd6c42e68" loc="81:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x2b0cd660d370" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x2b0cd6c13310" loc="1197:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x2b0cd6bc4c58" loc="804:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x2b0cd6c0f8f0" loc="1225:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x2b0cd6c0a020" loc="1253:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x2b0cd65753a0" loc="61:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x2b0cd6b9a808" loc="48:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x2b0cd6bfe328" loc="1054:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x2b0cd6b95df0" loc="122:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x2b0cd6bf1c50" loc="856:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x2b0cd66c6c90" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x2b0cd6c42808" loc="79:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x2b0cd6c40c80" loc="90:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x2b0cd6bfa020" loc="1077:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x2b0cd6b96810" loc="102:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x2b0cd6ba9948" loc="694:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x2b0cd6be7020" loc="914:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x2b0cd6bf4c48" loc="1121:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x2b0cd6bb81b8" loc="244:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x2b0cd6bbc538" loc="191:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x2b0cd6bf7930" loc="1101:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x2b0cd6bbd6f0" loc="179:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x2b0cd6bb61b8" loc="267:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x2b0cd6c3cde0" loc="111:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x2b0cd6bf4020" loc="1115:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x2b0cd6c1c620" loc="1143:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x2b0cd6c18c10" loc="1171:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x2b0cd6bce328" loc="737:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x2b0cd6c36c40" loc="1264:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x2b0cd6be5020" loc="928:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x2b0cd70c5918" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x2b0cd6922c60" loc="28:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x2b0cd6bee020" loc="871:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x2b0cd70e4c08" loc="223:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x2b0cd6bbf330" loc="834:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x2b0cd6c06c58" loc="1007:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x2b0cd6bfc020" loc="1065:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x2b0cd6b99710" loc="60:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x2b0cd6bb2c38" loc="310:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x2b0cd6b98518" loc="72:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x2b0cd6c05020" loc="1010:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x2b0cd6c485c8" loc="132:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x2b0cd6bf7620" loc="1098:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x2b0cd6749860" loc="96:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x2b0cd6c00628" loc="1043:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x2b0cd6beb640" loc="892:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x2b0cd6bd0630" loc="724:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x2b0cd6b59c10" loc="30:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x2b0cd6b95020" loc="108:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LEDS_LED1" ref="0x2b0cd6a29c88" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x2b0cd6bef330" loc="865:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x2b0cd6c1ac40" loc="1157:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x2b0cd6bbf930" loc="836:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x2b0cd6c15328" loc="1185:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x2b0cd6c09928" loc="987:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x2b0cd6c11958" loc="1213:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x2b0cd6c0c020" loc="1241:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x2b0cd6badb88" loc="676:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x2b0cd6b99de8" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x2b0cd6c31320" loc="1292:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x2b0cd6bcc328" loc="751:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x2b0cd6632020" loc="77:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x2b0cd6c12c20" loc="1207:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x2b0cd6757140" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x2b0cd6c0d320" loc="1235:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x2b0cd6b941b8" loc="125:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x2b0cd6be4950" loc="942:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x2b0cd6bba890" loc="223:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x2b0cd6bc4330" loc="801:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x2b0cd656add8" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x2b0cd6bcdc40" loc="747:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="SERIAL_ADDR" ref="0x2b0cd69f1020" loc="25:TestSerial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x2b0cd6c03c10" loc="1026:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x2b0cd6be9c28" loc="906:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x2b0cd6c08020" loc="989:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x2b0cd6bf8c30" loc="1095:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendRadioAck" ref="0x2b0cd6b623b8" loc="78:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="tableSendTask" ref="0x2b0cd6b61428" loc="76:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="serialSendTask" ref="0x2b0cd6b603e8" loc="73:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x2b0cd69b3190" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="NUM_TASKS" ref="0x2b0cd69b5e48" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="stopDoneTask" ref="0x2b0cd6e9baf0" loc="101:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="sendDoneTask" ref="0x2b0cd6e9ca70" loc="145:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="startDoneTask" ref="0x2b0cd6f3da98" loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="startDone" ref="0x2b0cd70a1868" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="stopDone" ref="0x2b0cd70a27a0" loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="modelSendDone" ref="0x2b0cd6fff710" loc="119:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x2b0cd7147020" loc="45:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x2b0cd7147340" loc="46:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x2b0cd70c1bb0" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x2b0cd72a7cc0" loc="56:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x2b0cd72b5a38" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x2b0cd72a7980" loc="55:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="senseResult" ref="0x2b0cd7317cd0" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc">
      <component-ref qname="ConstantSensorC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x2b0cd5b11120" loc="120:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x2b0cd5b11120"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x2b0cd6937b40" loc="134:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x2b0cd6937198"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x2b0cd6937b40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x2b0cd70e0578" loc="247:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70e17d8"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x2b0cd70e0578"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x2b0cd6374588" loc="201:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x2b0cd6374588"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x2b0cd5af9a28" loc="324:/usr/lib/gcc/x86_64-linux-gnu/4.6.1/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x2b0cd5af9a28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x2b0cd6c3e4d8" loc="99:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd6c3e020"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x2b0cd6c3e4d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x2b0cd6343750" loc="152:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x2b0cd6343750"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x2b0cd69429b0" loc="16:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x2b0cd69423c8"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x2b0cd69429b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_uint32_t" ref="0x2b0cd65986b8" loc="56:/usr/include/_G_config.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_uint32_t" ref="0x2b0cd65986b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x2b0cd632a020" loc="44:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x2b0cd632a020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x2b0cd632b020" loc="39:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x2b0cd632b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x2b0cd6938e28" loc="129:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2b0cd693ade8"/>
        <typename><typedef-ref name="serial_header_t" ref="0x2b0cd6938e28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x2b0cd6a1c788" loc="42:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1c430"/>
        <typename><typedef-ref name="TMilli" ref="0x2b0cd6a1c788"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_int16_t" ref="0x2b0cd6599690" loc="53:/usr/include/_G_config.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_int16_t" ref="0x2b0cd6599690"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_char" ref="0x2b0cd632e948" loc="31:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x2b0cd632e948"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x2b0cd70b8e40" loc="111:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x2b0cd70b8e40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x2b0cd70db920" loc="278:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x2b0cd70db920"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x2b0cd63399a0" loc="189:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__intptr_t" ref="0x2b0cd63399a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x2b0cd6339248" loc="185:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x2b0cd632a7a8"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x2b0cd6339248"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x2b0cd70b6e70" loc="116:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x2b0cd70b6e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x2b0cd63547b8" loc="78:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2b0cd6354460"/>
        <typename><typedef-ref name="fd_set" ref="0x2b0cd63547b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x2b0cd66328c0" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b0cd66328c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x2b0cd63395e0" loc="186:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x2b0cd63395e0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x2b0cd6336020" loc="149:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__time_t" ref="0x2b0cd6336020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x2b0cd633ba40" loc="180:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ssize_t" ref="0x2b0cd633ba40"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x2b0cd63ea628" loc="31:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x2b0cd63ea628"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x2b0cd633fab8" loc="71:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x2b0cd633fab8"/></typename>
      </type-int>
    </typedef>
    <typedef name="CommandMsg" ref="0x2b0cd69f0718" loc="35:TestSerial.h">
      <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="CommandMsg" ref="0x2b0cd69f1340"/>
        <typename><typedef-ref name="CommandMsg" ref="0x2b0cd69f0718"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x2b0cd70dd4b8" loc="262:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70dfba0"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x2b0cd70dd4b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x2b0cd65a8480" loc="180:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x2b0cd65a8480"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x2b0cd5b0b768" loc="68:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x2b0cd5b0b768"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x2b0cd5aef600"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2b0cd5aef4a0"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x2b0cd632bb30" loc="42:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x2b0cd632bb30"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x2b0cd6a1b788" loc="44:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1b430"/>
        <typename><typedef-ref name="TMicro" ref="0x2b0cd6a1b788"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x2b0cd633b2a8" loc="177:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x2b0cd633b2a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x2b0cd633fe60" loc="76:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="nlink_t" ref="0x2b0cd633fe60"/></typename>
      </type-int>
    </typedef>
    <typedef name="MoteTableEntry" ref="0x2b0cd69ed178" loc="46:TestSerial.h">
      <type-tag size="I:8" alignment="I:2"><struct-ref name="MoteTableEntry" ref="0x2b0cd69ee368"/>
        <typename><typedef-ref name="MoteTableEntry" ref="0x2b0cd69ed178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clock_t" ref="0x2b0cd6344020" loc="60:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x2b0cd6344020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x2b0cd70db540" loc="277:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x2b0cd70db540"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x2b0cd6366088" loc="136:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b0cd6367c48"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x2b0cd6366088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_list_t" ref="0x2b0cd6363020" loc="65:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b0cd63653e0"/>
        <typename><typedef-ref name="__pthread_list_t" ref="0x2b0cd6363020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x2b0cd66d89e0" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x2b0cd66d8020"/>
        <typename><typedef-ref name="heap_t" ref="0x2b0cd66d89e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TableMsg" ref="0x2b0cd69eac48" loc="62:TestSerial.h">
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TableMsg" ref="0x2b0cd69ecbb0"/>
        <typename><typedef-ref name="TableMsg" ref="0x2b0cd69eac48"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x2b0cd6331720" loc="136:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x2b0cd6331720"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x2b0cd62c1090" loc="446:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x2b0cd62c1090"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x2b0cd666bd90" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x2b0cd666b078"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x2b0cd666bd90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x2b0cd6342868" loc="36:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x2b0cd6342868"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x2b0cd6366818" loc="144:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x2b0cd6366818"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x2b0cd6343ab8" loc="153:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x2b0cd6343ab8"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x2b0cd6923968" loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x2b0cd6923968"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x2b0cd70dd950" loc="265:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70dfba0"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x2b0cd70dd950"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x2b0cd5b0d020" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x2b0cd5b0d020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x2b0cd632fbf0" loc="144:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b0cd632f898"/>
        <typename><typedef-ref name="__fsid_t" ref="0x2b0cd632fbf0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x2b0cd70ddd70" loc="269:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x2b0cd70ddd70"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x2b0cd70dc958" loc="272:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x2b0cd70dc958"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x2b0cd5b0f938" loc="107:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast32_t" ref="0x2b0cd5b0f938"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x2b0cd635d448" loc="229:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blksize_t" ref="0x2b0cd635d448"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x2b0cd5b0bb28" loc="70:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x2b0cd5b0bb28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x2b0cd70d00c8" loc="324:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70d2c90"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b0cd70d00c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x2b0cd632f368" loc="143:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x2b0cd632f368"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x2b0cd632c0c8" loc="33:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x2b0cd632c0c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x2b0cd70b6aa0" loc="115:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x2b0cd70b6aa0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x2b0cd70db160" loc="276:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x2b0cd70db160"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x2b0cd66512c8" loc="51:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b0cd663ce98"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b0cd66512c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x2b0cd68985d8" loc="67:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x2b0cd68985d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x2b0cd634fb28" loc="24:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x2b0cd634fb28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x2b0cd70ebae0" loc="178:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70eb6d8"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x2b0cd70ebae0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x2b0cd6336af8" loc="153:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x2b0cd6336af8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x2b0cd6331ad8" loc="137:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino_t" ref="0x2b0cd6331ad8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_uint16_t" ref="0x2b0cd6598160" loc="55:/usr/include/_G_config.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_uint16_t" ref="0x2b0cd6598160"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x2b0cd5b0b020" loc="66:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x2b0cd5b0b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x2b0cd659d020" loc="49:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/>
        <typename><typedef-ref name="FILE" ref="0x2b0cd659d020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x2b0cd63b3c08" loc="742:/usr/include/stdlib.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x2b0cd63b3c08"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x2b0cd62de218" loc="40:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x2b0cd62d9978"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x2b0cd62de218"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x2b0cd6c64918" loc="161:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x2b0cd6c64918"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x2b0cd63303b0" loc="139:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x2b0cd63303b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x2b0cd62de5f8" loc="43:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x2b0cd62d9978"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x2b0cd62de5f8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x2b0cd693aaa8" loc="121:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x2b0cd693c970"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x2b0cd693aaa8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x2b0cd63448e8" loc="92:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x2b0cd63448e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x2b0cd70d8d18" loc="291:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x2b0cd70d8d18"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x2b0cd70d7908" loc="294:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x2b0cd70d7908"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x2b0cd633f720" loc="66:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x2b0cd633f720"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x2b0cd6340778" loc="40:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b0cd632f898"/>
        <typename><typedef-ref name="fsid_t" ref="0x2b0cd6340778"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x2b0cd69106f0" loc="59:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x2b0cd69103c8"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x2b0cd69106f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x2b0cd6c64178" loc="158:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0cd6c37a10"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b0cd6c64178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x2b0cd5b09020" loc="37:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x2b0cd5b09020"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x2b0cd666ccd8" loc="54:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x2b0cd666c4b0"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x2b0cd666ccd8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x2b0cd6355470" loc="49:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="suseconds_t" ref="0x2b0cd6355470"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x2b0cd634ed38" loc="38:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2b0cd634e600"/>
        <typename><typedef-ref name="sigset_t" ref="0x2b0cd634ed38"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0x2b0cd6a1b020" loc="43:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1cb98"/>
        <typename><typedef-ref name="T32khz" ref="0x2b0cd6a1b020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x2b0cd63424e8" loc="35:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x2b0cd63424e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x2b0cd6942088" loc="12:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x2b0cd6921020"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x2b0cd6942088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x2b0cd5af9250" loc="150:/usr/lib/gcc/x86_64-linux-gnu/4.6.1/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x2b0cd5af9250"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x2b0cd6a1c020" loc="41:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b0cd6a1fc48"/>
        <typename><typedef-ref name="TSecond" ref="0x2b0cd6a1c020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x2b0cd635d828" loc="236:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x2b0cd635d828"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x2b0cd5b0a778" loc="52:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b0cd5b0a778"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x2b0cd62c1e80" loc="448:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x2b0cd62c1e80"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x2b0cd62b81c8" loc="435:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x2b0cd62b81c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x2b0cd5b114f0" loc="123:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x2b0cd5b114f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x2b0cd63467d8" loc="117:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x2b0cd63467d8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x2b0cd632c490" loc="34:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_long" ref="0x2b0cd632c490"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x2b0cd5b0fd30" loc="108:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x2b0cd5b0fd30"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x2b0cd70dc578" loc="271:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x2b0cd70dc578"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x2b0cd632b3f8" loc="40:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x2b0cd632b3f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x2b0cd6342140" loc="34:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x2b0cd6342140"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x2b0cd6c4b608" loc="120:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x2b0cd6c4b608"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x2b0cd5b0e5b8" loc="93:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast16_t" ref="0x2b0cd5b0e5b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x2b0cd70dcd58" loc="275:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x2b0cd70dcd58"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x2b0cd70d9160" loc="280:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x2b0cd70d9160"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x2b0cd65c1b38" loc="111:/usr/include/stdio.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b0cd659a1d0"/>
        <typename><typedef-ref name="fpos_t" ref="0x2b0cd65c1b38"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x2b0cd70e00c8" loc="244:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70e17d8"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x2b0cd70e00c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x2b0cd6314ad0" loc="102:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b0cd63146c8"/>
        <typename><typedef-ref name="div_t" ref="0x2b0cd6314ad0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x2b0cd67dce50" loc="6:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x2b0cd67dc6b8"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x2b0cd67dce50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x2b0cd5af9660" loc="212:/usr/lib/gcc/x86_64-linux-gnu/4.6.1/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x2b0cd5af9660"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x2b0cd632cbd8" loc="38:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x2b0cd632cbd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x2b0cd634e958" loc="32:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2b0cd634e600"/>
        <typename><typedef-ref name="__sigset_t" ref="0x2b0cd634e958"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x2b0cd70b8a68" loc="110:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b8020"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x2b0cd70b8a68"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x2b0cd633be18" loc="184:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x2b0cd633be18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x2b0cd6330020" loc="138:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x2b0cd6330020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x2b0cd69248e8" loc="6:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <documentation loc="34:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x2b0cd69248e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x2b0cd6934178" loc="53:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0x2b0cd69367f8"/>
        <typename><typedef-ref name="message_header_t" ref="0x2b0cd6934178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x2b0cd67cb2d8" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2b0cd67cc7e8"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x2b0cd67cb2d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x2b0cd6923d20" loc="12:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x2b0cd6923d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x2b0cd62b9428" loc="433:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x2b0cd62b9428"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x2b0cd6c64548" loc="160:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x2b0cd6c64548"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x2b0cd5b0d620" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x2b0cd5b0d620"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x2b0cd65aca50" loc="384:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x2b0cd65aca50"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x2b0cd5b0a020" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b0cd5b0a020"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x2b0cd6344478" loc="76:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x2b0cd6344478"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x2b0cd62bedb8" loc="441:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x2b0cd62bedb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x2b0cd63110c8" loc="122:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b0cd6313c68"/>
        <typename><typedef-ref name="lldiv_t" ref="0x2b0cd63110c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x2b0cd65b1020" loc="341:/usr/include/libio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x2b0cd65b1020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x2b0cd6365020" loc="57:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x2b0cd635cbf0"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x2b0cd6365020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x2b0cd65ac128" loc="381:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x2b0cd632f020"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x2b0cd65ac128"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x2b0cd633e918" loc="99:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x2b0cd633e918"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x2b0cd6344cf0" loc="104:/usr/include/time.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x2b0cd6344cf0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x2b0cd6374178" loc="195:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x2b0cd636ccf0"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x2b0cd6374178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x2b0cd70b6268" loc="112:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x2b0cd70b6268"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x2b0cd632a3f8" loc="45:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x2b0cd632a3f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x2b0cd6331020" loc="134:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x2b0cd6331020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x2b0cd62bcba0" loc="443:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x2b0cd62bcba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="va_list" ref="0x2b0cd65c1758" loc="80:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2b0cd5aef4a0"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x2b0cd65c1758"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__off_t" ref="0x2b0cd6330b00" loc="141:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off_t" ref="0x2b0cd6330b00"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x2b0cd5b0e200" loc="91:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x2b0cd5b0e200"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x2b0cd633c288" loc="169:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt_t" ref="0x2b0cd633c288"/></typename>
      </type-int>
    </typedef>
    <typedef name="SensorMsg" ref="0x2b0cd69ec8a0" loc="55:TestSerial.h">
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="SensorMsg" ref="0x2b0cd69ed490"/>
        <typename><typedef-ref name="SensorMsg" ref="0x2b0cd69ec8a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x2b0cd6940840" loc="22:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x2b0cd6942d00"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x2b0cd6940840"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_id_t" ref="0x2b0cd69235b8" loc="10:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x2b0cd69235b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x2b0cd5b118a0" loc="135:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x2b0cd5b118a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x2b0cd70e1be0" loc="241:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70e17d8"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b0cd70e1be0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x2b0cd70b66c8" loc="114:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b8020"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x2b0cd70b66c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x2b0cd69364b0" loc="138:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x2b0cd6937e90"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x2b0cd69364b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x2b0cd633ca50" loc="173:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x2b0cd633ca50"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x2b0cd5b0a3e8" loc="50:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b0cd5b0a3e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x2b0cd659a5d8" loc="26:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b0cd659a1d0"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x2b0cd659a5d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x2b0cd6350088" loc="201:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x2b0cd6350088"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x2b0cd70dc198" loc="270:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x2b0cd70dc198"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x2b0cd70d8540" loc="287:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x2b0cd70d8540"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x2b0cd6924de0" loc="7:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x2b0cd6924de0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x2b0cd6334ab0" loc="161:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x2b0cd6334ab0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x2b0cd6933520" loc="61:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:4" alignment="I:1"><union-ref name="message_metadata" ref="0x2b0cd6934e48"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x2b0cd6933520"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x2b0cd65ad128" loc="372:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x2b0cd633ba40"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x2b0cd5af9660"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x2b0cd65ad128"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x2b0cd6354ba0" loc="85:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fd_mask" ref="0x2b0cd6354ba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x2b0cd62be020" loc="437:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x2b0cd62be020"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x2b0cd6661d30" loc="10:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2b0cd6661958"/>
        <typename><typedef-ref name="hashtable_t" ref="0x2b0cd6661d30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x2b0cd633f3a0" loc="61:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x2b0cd633f3a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x2b0cd632ab80" loc="54:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x2b0cd632ab80"/></typename>
      </type-int>
    </typedef>
    <typedef name="__swblk_t" ref="0x2b0cd6334020" loc="154:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__swblk_t" ref="0x2b0cd6334020"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x2b0cd6350b18" loc="203:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x2b0cd6350b18"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x2b0cd635c020" loc="244:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x2b0cd635c020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x2b0cd5b0f148" loc="104:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x2b0cd5b0f148"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim64_t" ref="0x2b0cd63377c0" loc="147:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x2b0cd63377c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__key_t" ref="0x2b0cd6334368" loc="155:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x2b0cd6334368"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x2b0cd63363d8" loc="150:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x2b0cd63363d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x2b0cd70b4bc0" loc="130:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b47b8"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x2b0cd70b4bc0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x2b0cd70d8160" loc="286:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x2b0cd70d8160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x2b0cd65af0c8" loc="364:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x2b0cd633ba40"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x2b0cd5af9660"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x2b0cd65af0c8"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x2b0cd62b3d00" loc="432:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x2b0cd62b3d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x2b0cd5b13360" loc="35:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x2b0cd5b13360"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x2b0cd70d7158" loc="292:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x2b0cd70d7158"/></typename>
      </type-int>
    </typedef>
    <typedef name="BeaconMsg" ref="0x2b0cd69ee020" loc="39:TestSerial.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="BeaconMsg" ref="0x2b0cd69f0a30"/>
        <typename><typedef-ref name="BeaconMsg" ref="0x2b0cd69ee020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="register_t" ref="0x2b0cd634f5b8" loc="206:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x2b0cd634f5b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x2b0cd63722e0" loc="216:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b0cd6373e88"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x2b0cd63722e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x2b0cd70d4ce0" loc="309:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70d48d8"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b0cd70d4ce0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x2b0cd70b8428" loc="108:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/sensornet6/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b8020"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b0cd70b8428"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x2b0cd6346088" loc="110:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x2b0cd6346088"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x2b0cd632a7a8" loc="53:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x2b0cd632a7a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x2b0cd5b097e8" loc="39:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x2b0cd5b097e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x2b0cd5b0ab40" loc="56:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x2b0cd5b0ab40"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x2b0cd6342c00" loc="37:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x2b0cd6342c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x2b0cd6c29cb0" loc="94:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x2b0cd6c29cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x2b0cd6572698" loc="302:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x2b0cd65614d8"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x2b0cd6572698"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x2b0cd62bb2a0" loc="444:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x2b0cd62bb2a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x2b0cd62bc4d0" loc="442:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x2b0cd62bc4d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x2b0cd635c470" loc="50:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_t" ref="0x2b0cd635c470"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x2b0cd6334e78" loc="164:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blksize_t" ref="0x2b0cd6334e78"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x2b0cd5b16088" loc="283:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b0cd5b13bf8"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x2b0cd5b16088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x2b0cd6330780" loc="140:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__nlink_t" ref="0x2b0cd6330780"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x2b0cd70e8ae0" loc="205:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70e8228"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x2b0cd70e8ae0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__id_t" ref="0x2b0cd6337b38" loc="148:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x2b0cd6337b38"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0x2b0cd5b0d9e8" loc="79:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x2b0cd5b0d9e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x2b0cd659caa0" loc="95:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b0cd659c698"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x2b0cd659caa0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x2b0cd6934ae8" loc="57:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x2b0cd69344c0"/>
        <typename><typedef-ref name="message_footer_t" ref="0x2b0cd6934ae8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x2b0cd70d9d20" loc="285:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x2b0cd70d9d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x2b0cd63140c8" loc="72:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x2b0cd6315b40"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x2b0cd63140c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x2b0cd633c640" loc="170:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x2b0cd633c640"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x2b0cd635dc10" loc="240:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x2b0cd635dc10"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x2b0cd633e598" loc="87:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x2b0cd633e598"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x2b0cd632ed18" loc="32:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x2b0cd632ed18"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x2b0cd62b9ad0" loc="434:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x2b0cd62b9ad0"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x2b0cd6340020" loc="38:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x2b0cd6340020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x2b0cd6336798" loc="151:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__suseconds_t" ref="0x2b0cd6336798"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x2b0cd63736f8" loc="210:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:8"><union-ref ref="0x2b0cd6374d48"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x2b0cd63736f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x2b0cd70dd020" loc="259:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70dfba0"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b0cd70dd020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x2b0cd632c840" loc="37:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x2b0cd632c840"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x2b0cd6599178" loc="31:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b0cd659acb0"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x2b0cd6599178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x2b0cd63346f8" loc="158:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x2b0cd63346f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x2b0cd5b0f540" loc="106:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast16_t" ref="0x2b0cd5b0f540"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x2b0cd70d9940" loc="284:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x2b0cd70d9940"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x2b0cd5b11c70" loc="136:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x2b0cd5b11c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x2b0cd6923228" loc="8:/home/sensornet6/local/src/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x2b0cd6923228"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x2b0cd6337020" loc="145:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__clock_t" ref="0x2b0cd6337020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x2b0cd62b8890" loc="436:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x2b0cd62b8890"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x2b0cd63373e8" loc="146:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim_t" ref="0x2b0cd63373e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x2b0cd63403e0" loc="39:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x2b0cd63403e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x2b0cd5b0e970" loc="94:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast32_t" ref="0x2b0cd5b0e970"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x2b0cd5b0b3e0" loc="67:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x2b0cd5b0b3e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x2b0cd6313578" loc="110:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b0cd6313170"/>
        <typename><typedef-ref name="ldiv_t" ref="0x2b0cd6313578"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x2b0cd634f088" loc="204:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x2b0cd634f088"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x2b0cd63505d0" loc="202:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x2b0cd63505d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x2b0cd70eea20" loc="163:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70ee618"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b0cd70eea20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x2b0cd70e6020" loc="208:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70e8228"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x2b0cd70e6020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x2b0cd5b0dde8" loc="81:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x2b0cd5b0dde8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x2b0cd632b790" loc="41:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x2b0cd632b790"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_int32_t" ref="0x2b0cd6599ba8" loc="54:/usr/include/_G_config.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_int32_t" ref="0x2b0cd6599ba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x2b0cd636c530" loc="189:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x2b0cd636c078"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x2b0cd636c530"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x2b0cd63ea980" loc="32:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x2b0cd63ea980"/></typename>
      </type-float>
    </typedef>
    <typedef name="__fd_mask" ref="0x2b0cd6355828" loc="55:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fd_mask" ref="0x2b0cd6355828"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x2b0cd66337b8" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b0cd66337b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x2b0cd633ce50" loc="174:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x2b0cd633ce50"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x2b0cd6755a68" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x2b0cd6756700"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x2b0cd6755a68"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x2b0cd659d478" loc="65:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b0cd659fb10"/>
        <typename><typedef-ref name="__FILE" ref="0x2b0cd659d478"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x2b0cd6598bf8" loc="40:/usr/lib/gcc/x86_64-linux-gnu/4.6.1/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2b0cd5aef4a0"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x2b0cd6598bf8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x2b0cd62bb970" loc="445:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x2b0cd62bb970"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x2b0cd632f020" loc="142:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x2b0cd632f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x2b0cd70d7530" loc="293:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x2b0cd70d7530"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x2b0cd633b6a8" loc="178:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x2b0cd633b6a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x2b0cd70d9560" loc="283:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x2b0cd70d9560"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x2b0cd70d8920" loc="288:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x2b0cd70d8920"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x2b0cd5b09b68" loc="41:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x2b0cd5b09b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x2b0cd5b094a0" loc="38:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x2b0cd5b094a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x2b0cd63433a0" loc="151:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ulong" ref="0x2b0cd63433a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x2b0cd5b0ed28" loc="95:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x2b0cd5b0ed28"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_serial_packet_t" ref="0x2b0cd6968960" loc="63:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim_serial_packet.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_serial_packet" ref="0x2b0cd69685f8"/>
        <typename><typedef-ref name="sim_serial_packet_t" ref="0x2b0cd6968960"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uid_t" ref="0x2b0cd633e218" loc="81:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x2b0cd633e218"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x2b0cd6932da8" loc="19:/home/sensornet6/local/src/tinyos-2.x/tos/types/message.h">
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0cd6933838"/>
        <typename><typedef-ref name="message_t" ref="0x2b0cd6932da8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x2b0cd62be6e8" loc="438:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x2b0cd62be6e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x2b0cd70b0308" loc="146:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70b2ed0"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b0cd70b0308"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x2b0cd6340b10" loc="45:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x2b0cd6340b10"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x2b0cd6339d68" loc="192:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x2b0cd6339d68"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x2b0cd66d0658" loc="65:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x2b0cd66d2e50"/>
        <typename><typedef-ref name="node_t" ref="0x2b0cd66d0658"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x2b0cd63313a0" loc="135:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x2b0cd63313a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x2b0cd62b3658" loc="431:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x2b0cd62b3658"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x2b0cd6753c50" loc="83:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x2b0cd6755e88"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x2b0cd6753c50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x2b0cd633ec88" loc="105:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x2b0cd633ec88"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x2b0cd6361228" loc="104:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:40" alignment="I:8"><union-ref ref="0x2b0cd6362d18"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x2b0cd6361228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x2b0cd6748d98" loc="122:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x2b0cd6748d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x2b0cd63674d8" loc="130:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:8"><union-ref ref="0x2b0cd6367020"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x2b0cd63674d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x2b0cd6366468" loc="140:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x2b0cd6366468"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x2b0cd633f020" loc="49:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x2b0cd633f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x2b0cd6346430" loc="116:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x2b0cd6346430"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x2b0cd6733020" loc="63:/usr/include/x86_64-linux-gnu/sys/time.h">
      <documentation loc="32:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x2b0cd6733020"/></typename>
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x2b0cd6735490"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x2b0cd62c1788" loc="447:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x2b0cd62c1788"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x2b0cd6346b58" loc="123:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x2b0cd6346b58"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x2b0cd6361da8" loc="110:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b0cd63619a0"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x2b0cd6361da8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x2b0cd6940c68" loc="83:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x2b0cd6940c68"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x2b0cd70e8630" loc="202:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0cd70e8228"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b0cd70e8630"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x2b0cd70dbd00" loc="279:/home/sensornet6/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x2b0cd70dbd00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_serialSendTask" ref="0x2b0cd6b60958" loc="73:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendRadioAck" ref="0x2b0cd6b62928" loc="78:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_tableSendTask" ref="0x2b0cd6b61998" loc="76:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x2b0cd6f3c230" loc="96:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x2b0cd6f3d088" loc="101:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:4" size="I:16" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x2b0cd6e9b020" loc="145:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x2b0cd6f35cb0" loc="64:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2b0cd6f35860"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2b0cd6f35cb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_stopDone" ref="0x2b0cd70a2d10" loc="75:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-array elements="I:7" size="I:28" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_modelSendDone" ref="0x2b0cd6fffc80" loc="119:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-array elements="I:8" size="I:32" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDone" ref="0x2b0cd70a1dd8" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/tossim/sf/sim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-array elements="I:6" size="I:24" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x2b0cd729e138" loc="74:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x2b0cd72b4020" loc="71:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x2b0cd72ed228" loc="66:/home/sensornet6/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x2b0cd72eebc8"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x2b0cd72ed228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_senseResult" ref="0x2b0cd7316280" loc="47:/home/sensornet6/local/src/tinyos-2.x/tos/system/ConstantSensorC.nc">
      <component-ref qname="ConstantSensorC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
